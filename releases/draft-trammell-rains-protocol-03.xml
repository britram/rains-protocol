<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-trammell-rains-protocol-00" category="exp">

  <front>
    <title abbrev="RAINS">RAINS (Another Internet Naming Service) Protocol Specification</title>

    <author initials="B." surname="Trammell" fullname="Brian Trammell">
      <organization>ETH Zurich</organization>
      <address>
        <postal>
          <street>Universitaetstrasse 6</street>
          <city>Zurich</city>
          <code>8092</code>
          <country>Switzerland</country>
        </postal>
        <email>ietf@trammell.ch</email>
      </address>
    </author>

    <date year="2017" month="September" day="20"/>

    
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines an alternate protocol for Internet name resolution,
designed as a prototype to facilitate conversation about the evolution or
replacement of the Domain Name System protocol. It attempts to answer the
question: “how would we design DNS knowing what we do now,” on the
background of the properties of an ideal naming service described in 
<xref target="I-D.trammell-inip-pins"/>.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>This document defines an experimental protocol for providing Internet name
resolution services, as a replacement for DNS, called RAINS (RAINS, Another
Internet Naming Service). It is designed as a prototype to facilitate
conversation about the evolution or replacement of the Domain Name System
protocol, and was developed as a name resolution system for the SCION
(“Scalability, Control, and Isolation on Next-Generation Networks”) future
Internet architecture <xref target="SCION"/>. It attempts to answer the
question: “how would we design the DNS knowing what we do now,” on the
background of the properties of an ideal naming service described in 
<xref target="I-D.trammell-inip-pins"/>.</t>

<t>Its architecture (<xref target="architecture"/>) and information model 
(<xref target="information-model"/>) are largely compatible with the existing 
Domain Name System. However, it does take several radical departures 
from DNS as presently defined and implemented:</t>

<t><list style="symbols">
  <t>Delegation from a superordinate zone to a subordinate zone is done solely
with cryptography: a superordinate defines the key(s) that are valid for
signing assertions in the subordinate during a particular time interval.
Assertions about names can therefore safely be served from any infrastructure.</t>
  <t>All time references in RAINS are absolute: instead of a time to live, each
assertion’s temporal validity is defined by the temporal validity of the
signature(s) on it.</t>
  <t>All assertions have validity within a specific context. A context determines
the rules for chaining signatures to verify validity of an assertion. The
global context is a special case of context, which uses chains from the
global naming root key. The use of context explicitly separates global usage
of the DNS from local usage thereof, and allows other application-specific
naming constraints to be bound to names; see <xref target="context-in-assertions"/>.
Queries are valid in one or more contexts, with specific rules for
determining which assertions answer which queries; see 
<xref target="context-in-queries"/>.</t>
  <t>There is an explicit separation between registrant-level names and
sub-registrant-level names, and explicit information about registrars and
registrants available in the naming system at runtime.</t>
  <t>Sets of valid characters and rules for valid names are defined on a per-zone
basis, and can be verified at runtime.</t>
  <t>Reverse lookups are done using a completely separate tree, supporting
delegations of any prefix length, in accordance with CIDR <xref target="RFC4632"/> and
the IPv6 addressing architecture <xref target="RFC4291"/>.</t>
</list></t>

<t>Instead of using a custom binary framing as DNS, RAINS uses Concise Binary
Object Representation <xref target="RFC7049"/>, partially in an effort to make
implementations easier to verify and less likely to contain potentially
dangerous parser bugs <xref target="PARSER-BUGS"/>. Like DNS, CBOR messages can be carried
atop any number of substrate protocols; RAINS is presently defined to use TLS
over persistent TCP connections (see <xref target="protocol-def"/>).</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The terms MUST, MUST NOT, SHOULD, SHOULD NOT, and MAY, when they appear in
all-capitals, are to be interpreted as defined in <xref target="RFC2119"/>.</t>

<t>In addition, the following terms are used in this document as defined:</t>

<t><list style="symbols">
  <t>Authority: An entity which may make assertions about names in a zone, by virtue of holding a secret key which can generate signatures verifiable using a public key associated with a delegation to the zone.</t>
  <t>Assertion: A mapping between a name and object(s) of specified types describing the name, signed by an authority for the zone containing the subject name. See <xref target="assertion"/>.</t>
  <t>Subject: The name to which an assertion pertains.</t>
  <t>Object: A type/value pair of information about a name within an assertion.</t>
  <t>Query: An expression of interest in certain types of objects pertaining to a subject name in one or more contexts. See <xref target="query"/>.</t>
  <t>Context: Additional information about the scope in which an assertion or query is valid. See <xref target="context-in-assertions"/> and <xref target="context-in-queries"/>.</t>
  <t>Shard: A group of assertions common to a zone, with common signatures, which may be lexicographically complete for purposes of proving nonexistence of an assertion. See <xref target="shards-and-zones"/>.</t>
  <t>Zone: A group of all assertions valid at a given point in time, with common signatures, for a given level of delegation and context within the namespace. See <xref target="shards-and-zones"/>.</t>
  <t>RAINS Message: Unit of exchange in the RAINS protocol, containing assertions, shards, zones, queries, and notifications. See <xref target="cbor-message"/>.</t>
  <t>Notification: A RAINS-internal message section carrying information about the operation of the protocol itself. See <xref target="cbor-notification"/>.</t>
  <t>Authority Service: A service provided by a RAINS Server for publishing assertions by an authority. See <xref target="architecture"/>.</t>
  <t>Query Service: A service provided by a RAINS Server for answering queries on behalf of a RAINS Client. See <xref target="architecture"/>.</t>
  <t>Intermediary Service: A service provided by a RAINS Server for answering queries and providing temporary storage for assertions on behalf of other RAINS Servers. See <xref target="architecture"/>.</t>
  <t>RAINS Server: A server that speaks the RAINS Protocol, and provides on or more services on behalf of other RAINS Servers and/or RAINS Clients. See <xref target="architecture"/>.</t>
  <t>RAINS Client: A client that uses the Query Service of one or more RAINS Servers to retrieve assertions on behalf of applications that wish to connect to named services in the Internet.</t>
</list></t>

</section>
<section anchor="architecture" title="Architecture">

<t>The RAINS architecture is simple, and resembles the architecture of DNS. A
RAINS Server is an entity that provides transient and/or permanent storage for
assertions about names, and a lookup function that finds assertions for a
given query about a name, either by searching local storage or by delegating
to another RAINS server. RAINS servers can take on any or all of three roles:</t>

<t><list style="symbols">
  <t>authority service, acting on behalf of an authority to ensure properly
signed assertions are made available to the system (equivalent to an
authoritative server in DNS);</t>
  <t>query service, acting on behalf of a client to answer queries with relevant
assertions (equivalent to a recursive resolver in DNS), and to validate
assertions on the client’s behalf; and/or</t>
  <t>intermediary service, acting on behalf of neither but providing storage and
lookup for assertions with certain properties for query and authority
servers (partially replacing, but not really equivalent to, caching
resolvers in DNS).</t>
</list></t>

<t>RAINS Servers use the RAINS Protocol defined in this document to exchange
queries and assertions. RAINS Clients use a subset variant of the RAINS Protocol
(called the RAINS Client Protocol) to interact with RAINS Servers providing
query services on their behalf.</t>

</section>
<section anchor="information-model" title="Information Model">

<t>The RAINS Protocol is based on an information model built around two kinds of
information: Assertions and Queries. An Assertion contains some information
about a name or address, and a Query contains a request for information about a
name of address. The information model in this section omits information
elements required by the resolution mechanism itself; these are defined in more
detail in <xref target="cbor"/> and <xref target="protocol-def"/>.</t>

<section anchor="assertion" title="Assertion">

<t>An Assertion is a signed statement about a mapping from a subject name to an
object value, and consists of the following elements:</t>

<t><list style="symbols">
  <t>Context: name of the context in which the assertion is valid;
see <xref target="context-in-assertions"/> below.</t>
  <t>Subject: name about which the assertion is made.</t>
  <t>Zone: name of the zone in which the assertion is made. The fully qualified
name of the subject is made by appending the zone name to the subject name
with a domain name separator (‘.’).</t>
  <t>Type: the type of information about the Subject contained in the 
assertion. Each Assertion is about a single type of data.</t>
  <t>Object: the data of the indicated type associated with the Subject</t>
  <t>Signatures: one or more signatures generated by the authority for the
Assertion. Signatures contain a time interval during which they are considered
valid. See <xref target="signatures-in-assertions"/> below.</t>
</list></t>

<t>The Types supported for each assertion are:</t>

<t><list style="symbols">
  <t>Delegation: the authority associated with the zone identified by the name
(roughly equivalent to the DNSSEC DS RRTYPE). The Object contains a public
key by which the authority can be identified.</t>
  <t>Redirection: The name(s) of one or more a RAINS servers providing authority
service for the authority associated with the zone (roughly equivalent to
the DNSSEC NS RRTYPE, but not always consulted directly during resolution).
The Object contains a set of names.</t>
  <t>Address: one or more addresses associated with the name (replaces DNS A and
AAAA RTYPEs). The Object contains a set of Addresses. An Address is an 
{address-family, value} tuple.</t>
  <t>Service-Info: one or more layer 4 ports and hostnames associated with a
service name (replaces DNS SRV RRTYPE). The object contains a {hostname,
port-number, priority tuple}.</t>
  <t>Name: one or more names associated with the name (roughly equivalent to DNS
CNAME). The Object contains a set of names.</t>
  <t>Certificate: a certificate which must appear at a specified location in the
certificate chain presented on a connection attempt with the named entity
(roughly equivalent to DNS TLSA).</t>
  <t>Zone-Nameset: an expression of the set of names allowed within a zone; e.g.
Unicode scripts or codepages in which names in the zone may be issued. This
allows a zone to set policy on names in support of the distinguishability
property in <xref target="I-D.trammell-inip-pins"/> that can be checked by RAINS 
servers at runtime. An assertion about a Subject within a Zone whose
name is not allowed by a valid signed Zone-Nameset expression is taken to be
invalid, even if it has a valid signature.</t>
  <t>Zone-Registrar: Information about the organization that caused a Subject name 
to exist, for registrant-level names.</t>
  <t>Zone-Registrant: Information about the organization responsible for a 
Subject name, for registrant-level names.</t>
  <t>Infrastructure Key: Information about public keys used for object security
within the RAINS infrastructure itself. The Object contains a public key by
which a named RAINS server can be identified.</t>
  <t>External Key: Information about public keys used for additional signatures
on assertions. The external key is usually discovered outside RAINS, and can
be verified by comparison with the key stored in a RAINS assertion. The
Object contains an external public key.</t>
  <t>Subsequent Key: Assertions about delegations are made by a zone’s
superordinate. A zone may request that its superordinate delegate to a new
public key by publishing a subsequent key assertion (replacing the mechanism
implemented by CDS/CDNSKEY in DNS).</t>
</list></t>

<t>For a given {subject, type} tuple, multiple assertions can be valid at a given
point in time; the union of the object values of all of these assertions is
considered to be the set of valid values at that point in time.</t>

<section anchor="context-in-assertions" title="Context in Assertions">

<t>Assertion contexts are used to determine the validity of the signature by the
declared authority as follows:</t>

<t><list style="symbols">
  <t>The global context is identified by the special context name ‘.’. Assertions
in the global context are signed by the authority for the subject name. For
example, assertions about the name simplon.inf.ethz.ch in the global context
are only valid if signed by the relevant authority inf.ethz.ch.</t>
  <t>A local context is associated with a given authority. The authority-part and
the context-part of a local context name are divided by a context marker 
(‘cx–’). The authority-part directly identifies the authority whose key was
used to sign the assertion; assertions within a local context are only valid
if signed by the identified authority. Authorities have complete control
over how the contexts under their namespaces are arranged, and over the names 
within those contexts.</t>
</list></t>

<t>Assertion context is the mechanism by which RAINS provides explicit
inconsistency (see section 5.3.2 of <xref target="I-D.trammell-inip-pins"/>). Some
examples illustrate how context works:</t>

<t><list style="symbols">
  <t>For the common split-DNS case, an enterprise could place names for machines
on its local networks within a separate context. E.g., a workstation could
be named simplon.cab.inf.ethz.ch within the context 
staff-workstations.cx–.inf.ethz.ch. Assertions about this name would 
be signed by the authority
for inf.ethz.ch. Here, the context serves simply as a marker, without enabling
an alternate signature chain: note that the name simplon.cab.inf.ethz.ch can
be validly signed by the authority for inf.ethz.ch if no delegation exists
for cab.inf.ethz.ch. The context simply marks this assertion as internal. This
allows a client making requests of local names to know they are local, and
for local resolvers to manage visibility of assertions outside the
enterprise: explicit context makes accidental leakage of both queries and
assertions easier to detect and avoid.</t>
  <t>Contexts make captive-portal interactions more explicit: a captive portal 
resolver could respond to a query for a common website (e.g. www.google.ch)
with a signed response directed at the captive portal, but within a context
identifying the location as well as the ISP (e.g. 
sihlquai.zurich.ch.cx–.starbucks.access.some-isp.net.). This response will
be signed by the authority for starbucks.access.some-isp.net. This
signature achieves two things: first, the client knows the result for
www.google.ch is not globally valid; second, it can present the user with
some indication as to the identity of the captive portal it is connected to.</t>
</list></t>

<t>Further examples showing how context can be used in queries as well are given
in <xref target="context-in-queries"/> below.</t>

<t>Developing conventions for assertion contexts for different situations will
require implementation and deployment experience, and is a subject for future
work.</t>

</section>
<section anchor="signatures-in-assertions" title="Signatures in Assertions">

<t>A signature over an assertion contains the following information elements:</t>

<t><list style="symbols">
  <t>Algorithm: identifier of the algorithm used to generate the signature.</t>
  <t>Keyspace: identifier of the key space used to generate the signature, i.e. how the key to verify the signature should be retrieved. RAINS supports an internal keyspace, but allows signatures using externally obtained keys to appear on assertions for additional security.</t>
  <t>Keyphase: phase of the key used to generate the signature. Since multiple keys may be valid for a given authority at a given point in time, this allows the correct key to be retrieved directly.</t>
  <t>Valid-Since: a timestamp of the start of validity of this signature.</t>
  <t>Valid-Until: a timestamp of the end of validity of this signature.</t>
  <t>Signature: the cryptographic signature itself, whose format is determined by
the algorithm used.</t>
</list></t>

<t>The signature protects all the information in an assertion as well as its own
algorithm identifier, keyspace, keyphase, valid-since, and valid-until values;
it does not protect other signatures on the assertion.</t>

</section>
<section anchor="shards-and-zones" title="Shards and Zones">

<t>Assertions may also be grouped and signed as a group. A shard is a set of
assertions within the same zone and context, protected by one or more signatures
over all assertions within the shard. Shards have an exclusive lexicographic
range, and contain all assertions for names within a zone within that range.
This lexicographic completeness leads to the property that given a subject and
an authenticated shard, it can be shown that either an assertion with a given
name and type exists within the shard or does not exist at all.</t>

<t>A shard has the following information elements:</t>

<t><list style="symbols">
  <t>Context: name of the context in which the assertions in the shard are valid;
see <xref target="context-in-assertions"/> above.</t>
  <t>Zone: name of the zone in which the assertions are made.</t>
  <t>Content: a set of assertions sharing the context and zone.</t>
  <t>Signatures: one or more signatures generated by the authority for the
shard; see <xref target="signatures-in-assertions"/>.</t>
</list></t>

<t>For efficiency’s sake, information elements within a shard common to all
assertions (zone, context, signature) within the shard may be omitted from the
assertions themselves.</t>

<t>A zone is the entire set of shards subject to a given
authority within a given context. There are three kinds of zones;
treating these zones differently may allow lookup protocol
optimizations:</t>

<t><list style="symbols">
  <t>Zones containing only delegation assertions are delegation-only zones.
Delegation-only zones are not relevant as part of an assertion lookup, other
than for discovering and verifying authority. Top-level domains are
generally delegation-only.</t>
  <t>Zones containing no delegation assertions are final zones. Final zones are
not relevant as part of an authority discovery.</t>
  <t>Zones containing at least one delegation assertion and at least one
assertion that is not a delegation assertion are mixed zones. No
optimizations are available for mixed zones.</t>
</list></t>

<t>A zone has the following information elements:</t>

<t><list style="symbols">
  <t>Context: name of the context in which the assertions in the zone are valid;
see <xref target="context-in-assertions"/> above.</t>
  <t>Zone: name of the zone.</t>
  <t>Content: a set of assertions and/or shards sharing the context and zone.</t>
  <t>Signatures: one or more signatures generated by the authority for the
zone; see <xref target="signatures-in-assertions"/>.</t>
  <t>Kind: delegation-only, final, or mixed; see above.</t>
</list></t>

</section>
<section anchor="zone-reflexive-assertions" title="Zone-Reflexive Assertions">

<t>A zone may make an assertion about itself by using the string “@” as a subject
name. This facility can be used for any assertion type, but is especially useful
for self-signing root zones, and for a zone to make a subsequent key assertion
about itself. If an assertion of a given type about a zone is available both in
the zone itself and in the superordinate zone, the assertion in the
superordinate zone will take precedence.</t>

</section>
</section>
<section anchor="query" title="Query">

<t>A query is a request for a set of assertions supporting a conclusion about a
given subject-object mapping. It consists of the following information
elements:</t>

<t><list style="symbols">
  <t>Context: The context(s) in which assertions answering the
query will be accepted; see <xref target="context-in-queries"/> below.</t>
  <t>Qualified-Subject: the name about which the query is made. The subject name
in a query must be fully-qualified.</t>
  <t>Types: a set of assertion types the querier is interested in.</t>
  <t>Valid-Until: an optional client-generated timestamp for the query after 
which it expires and should not be answered.</t>
  <t>Query Token: a client-generated token for the query, which can be used in the
answer to refer to the query.</t>
  <t>Options: a set of options by which a client may specify tradeoffs 
(e.g. privacy for performance).</t>
</list></t>

<t>A query expresses interest about all the given types of assertion in all the
specified contexts; more complex expressions of which types in which contexts
must be asked using multiple queries. Preferences for tradeoffs (freshness,
bandwidth efficiency, latency, privacy preservation) in servicing a query may
be bound to the query using query options.</t>

<section anchor="context-in-queries" title="Context in Queries">

<t>Context is used in queries as it is in assertions (see
<xref target="context-in-assertions"/>). Assertion contexts in an answer to a query have to
match the context in the query in order to respond to a query. The Context
section of a query contains the context of desired assertions; a special “any”
context (represented by the empty string) indicates that assertions in any
context will be accepted.</t>

<t>Query contexts can also be used to provide additional information to RAINS
servers about the query. For example, context can provide a method for
explicit selection of a CDN server not based on either the client’s or the
resolver’s address (see <xref target="RFC7871"/>). Here, the CDN creates a context for
each of its content zones, and an external service selects appropriate
contexts for the client based not just on client source address but passive
and active measurement of performance. Queries for names at which content
resides can then be made within these contexts, with the priority order of
the contexts reflecting the goodness of the zone for the client. Here, a
context might be zrh.cx–.cdn-zones.some-cdn.com for names of servers
hosting content in a CDN’s Zurich data center, and a client could represent
its desire to find content nearby by making queries in the zrh.cx–,
fra.cx– (Frankfurt), and ams.cx– (Amsterdam) contexts within cdn-zones
.some-cdn.com. In all cases, the assertions themselves will be signed by the
authority for cdn-zones.some-cdn.com, accurately representing that it is
the CDN, not the owner of the related name in the global context, that is
making the assertion.</t>

<t>As with assertion contexts, developing conventions for query contexts for
different situations will require implementation and deployment experience,
and is a subject for future work.</t>

</section>
<section anchor="answers-to-queries" title="Answers to Queries">

<t>An answer consists of a set of assertions, shards, and/or zones which respond
to a query. If the query contained a token, it is bound to that query via the
token.</t>

<t>The content of an answer depends on whether the answer is positive or negative.
A positive answer contains the information requested in the smallest atomic
container that can be found, usually a single assertion. A negative answer
contains the information used to verify it; either a Shard, an entire Zone, or a
Zone-Nameset assertion showing the name is illegal within the zone.</t>

<t>A query is taken to have an inconclusive answer when no answer returns to the
querier before the query’s Valid-Until time.</t>

</section>
</section>
<section anchor="address-to-object-mapping" title="Address to Object Mapping">

<t>In contrast to the current domain name system, information about addresses is
stored in a completely separate tree, keyed by address and prefix. An address 
assertion consists of the following elements:</t>

<t><list style="symbols">
  <t>Context: name of the context in which the assertion is valid;
see <xref target="context-in-address-assertions"/>.</t>
  <t>Subject: address about which the assertion is made, consisting of an address
family, address, and prefix length. A subject may be a network address
(where the prefix length is less than the address length for the given
address family) or a host address (where the prefix length is equal to the
address length for the given address family)</t>
  <t>Type: the type of information about the Subject contained in the 
assertion. Each Assertion is about a single type of data.</t>
  <t>Object: the data of the indicated type associated with the Subject</t>
  <t>Signatures: one or more signatures generated by the authority for the
Assertion. Signatures contain a time interval during which they are considered
valid, as in <xref target="signatures-in-assertions"/>.</t>
</list></t>

<t>The following object types are available:</t>

<t><list style="symbols">
  <t>Delegation: the authority associated with the subject network address. 
The Object contains a public key by which the authority can be identified. Only available for network address subjects.</t>
  <t>Redirection: The name(s) of one or more a RAINS servers providing authority
service for the authority associated with the subject network address.
The Object contains a set of names. Only available for network address subjects.</t>
  <t>Name: one or more names associated with the subject network address.
The Object contains a set of names. Only available for host address subjects.</t>
  <t>Zone-Registrant: Information about the organization responsible for a 
network. Only available for network address subjects.</t>
</list></t>

<t>Queries for addresses are similar to those for names, and consist of the following information elements:</t>

<t><list style="symbols">
  <t>Context: Context in which the query is made; this must match the assertion 
context as in <xref target="context-in-address-assertions"/>.</t>
  <t>Subject: the address about which the query is made, consisting of an address
family, address, and prefix length.</t>
  <t>Types: a set of assertion types the querier is interested in, as above.</t>
  <t>Valid-Until: an optional client-generated timestamp for the query after 
which it expires and should not be answered.</t>
  <t>Query Token: a client-generated token for the query, which can be used
in the answer to refer to the query.</t>
</list></t>

<section anchor="context-in-address-assertions" title="Context in Address Assertions">

<t>Just as in forward Assertions, Assertion contexts are used in address
assertions to determine the scope of an address assertion, and the signature
chain used to verify it.</t>

<t><list style="symbols">
  <t>The global addressing context for each address family is identified by the
special context name ‘.’. For both IPv4 and IPv6 addresses, this is rooted at
IANA, which delegates to the RIRs, which then delegates to LIRs and to
address-holding registries.</t>
  <t>Local contexts associated with a given authority in a forward tree can also
make assertions about addresses. As with contexts in forward assertions, the
authority-part and the context-part of a local context name are divided by a
context marker (‘cx–’). The authority-part directly identifies the authority
whose key was used to sign the assertion; assertions within a local context
are only valid if signed by the identified authority. Authorities have
complete control over how the contexts under their namespaces are arranged,
and over the names within those contexts.</t>
</list></t>

<t>Each local context may have a root address space zone (0/0), but these root
address spaces may only delegate addresses that are reserved for local use
<xref target="RFC1918"/> <xref target="RFC4193"/>. Local context assertions for other addresses are
invalid.</t>

</section>
</section>
</section>
<section anchor="cbor" title="CBOR Data Model">

<t>The RAINS data model is a relatively straightforward mapping of the
information model in <xref target="information-model"/> to the Concise Binary Object
Representation (CBOR) <xref target="RFC7049"/>, with an outer message type providing a
mechanism for future capabilities-based versioning and recognition of a
message as a RAINS message.</t>

<t>Messages, assertions, shards, zones, queries, and notifications are each
represented as a CBOR map of integer keys to values, which allows each of
these types to be extended in the future, as well as the addition of non-
standard, application-specific information to RAINS messages and data items. A
common registry of map keys is given in <xref target="tabmkey"/>. RAINS implementations
MUST ignore map keys the do not understand. Integer map keys in the range -22
to +23 are reserved for the use of future versions or extensions to the RAINS
protocol.</t>

<t>Message contents, signatures and object values are implemented as type-
prefixed CBOR arrays with fixed meanings of each array element; the structure
of these lower-level elements can therefore not be extended. Message section
types are given in <xref target="tabsection"/>, object types in <xref target="tabobj"/>, and signature
algorithms in <xref target="tabsig"/>.</t>

<section anchor="cbor-symtab" title="Symbol Table">

<t>The meaning of each of the integer keys in message, zone, shard, assertion,
and notification maps is given in the symbol table below:</t>

<texttable title="CBOR Map Keys used in RAINS" anchor="tabmkey">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>signatures</c>
      <c>Signatures on a message or section</c>
      <c>1</c>
      <c>capabilities</c>
      <c>Capabilities of server sending message</c>
      <c>2</c>
      <c>token</c>
      <c>Token for referring to a data item</c>
      <c>3</c>
      <c>subject-name</c>
      <c>Subject name in an assertion</c>
      <c>4</c>
      <c>subject-zone</c>
      <c>Zone name in an assertion</c>
      <c>5</c>
      <c>subject-addr</c>
      <c>Subject address in address assertion or zone</c>
      <c>6</c>
      <c>context</c>
      <c>Context of an assertion or query</c>
      <c>7</c>
      <c>objects</c>
      <c>Objects of an assertion</c>
      <c>8</c>
      <c>query-name</c>
      <c>Fully qualified name for a query</c>
      <c>10</c>
      <c>query-types</c>
      <c>Acceptable object types for query</c>
      <c>11</c>
      <c>shard-range</c>
      <c>Lexical range of Assertions in Shard</c>
      <c>12</c>
      <c>query-expires</c>
      <c>Absolute timestamp for query expiration</c>
      <c>13</c>
      <c>query-opts</c>
      <c>Set of query options requested</c>
      <c>21</c>
      <c>note-type</c>
      <c>Notification type</c>
      <c>22</c>
      <c>note-data</c>
      <c>Additional notification data</c>
      <c>23</c>
      <c>content</c>
      <c>Content of a message, shard, or zone</c>
</texttable>

</section>
<section anchor="cbor-message" title="Message">

<t>All interactions in RAINS take place in an outer envelope called a Message,
which is a CBOR map tagged with the RAINS Message tag (hex 0xE99BA8, decimal
15309736).</t>

<t>A Message map MAY contain a signatures (0) key, whose value is an array of
Signatures over the entire message as defined in <xref target="cbor-signature"/>, to be
verified against the infrastructure key for the RAINS Server originating the
message.</t>

<t>A Message map MAY contain a capabilities (1) key, whose value is described in
<xref target="cbor-capabilities"/>.</t>

<t>A Message map MUST contain a token (2) key, whose value is a 16-byte array.
See <xref target="cbor-tokens"/> for details.</t>

<t>A Message map MUST contain a content (23) key, whose value is an array of
Message Sections; a Message Section is either an Assertion, Shard, Zone, or
Query, or Notification.</t>

</section>
<section anchor="message-section-header" title="Message Section header">

<t>Each Message Section in the Message’s content value MUST be a two-element
array. The first element in the array is the message section type, encoded as
an integer as in <xref target="cbor-symtab"/>. The second element in the array is a message
section body, a CBOR map defined as in the subsections shown in <xref target="cbor-symtab"/>:</t>

<texttable title="Message Section Type Codes" anchor="tabsection">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>1</c>
      <c>assertion</c>
      <c>Assertion (see <xref target="cbor-assertion"/>)</c>
      <c>-1</c>
      <c>revassertion</c>
      <c>Address Assertion (see <xref target="cbor-revassert"/>)</c>
      <c>2</c>
      <c>shard</c>
      <c>Shard (see <xref target="cbor-shard"/>)</c>
      <c>3</c>
      <c>zone</c>
      <c>Zone (see <xref target="cbor-zone"/>)</c>
      <c>4</c>
      <c>query</c>
      <c>Query (see <xref target="cbor-query"/>)</c>
      <c>-4</c>
      <c>revquery</c>
      <c>Address Query (see <xref target="cbor-revquery"/></c>
      <c>23</c>
      <c>notification</c>
      <c>Notification (see <xref target="cbor-notification"/>)</c>
</texttable>

</section>
<section anchor="cbor-assertion" title="Assertion body">

<t>An Assertion body is a map. The keys present in this map depend on whether the
Assertion is contained in a Message Section or in a Shard or Zone.</t>

<t>Assertions contained in Message Sections are “bare Assertions”. Since they
cannot inherit any values from their containers, they MUST contain the
signatures (0), subject-name (3), subject-zone (4), context (6), and objects
(7) keys.</t>

<t>Assertions within a Shard or Zone are “contained Assertions”, and can inherit
values from their containers. A contained Assertion MUST contain the subject-
name (3) and objects (7) keys. The subject-zone (4) and context (6) keys MUST
NOT be present. They are assumed to have the same value as the corresponding
values in the containing Shard or Zone for signature generation and signature
verification purposes; see <xref target="cbor-signature"/>.</t>

<t>A contained Assertion SHOULD contain the signatures (0) key, since an unsigned
contained Assertion cannot be used by a RAINS server to answer a query; it
must be returned in a signed Shard or Zone.</t>

<t>The value of the signatures (0) key, if present, is an array of one or more
Signatures as defined in <xref target="cbor-signature"/>. If not present, the containing
Shard or Zone MUST be signed. Signatures on a contained Assertion are
generated as if the inherited subject-zone and context values are present in
the Assertion, whether actually present or not. The signatures on the
Assertion are to be verified against the appropriate key for the Zone
containing the Assertion in the given context, as described in 
<xref target="signatures-in-assertions"/>.</t>

<t>The value of the subject-name (3) key is a UTF-8 encoded <xref target="RFC3629"/> string
containing the name of the subject of the assertion. The subject name never
contains the zone in which the subject name; the fully-qualified name is
obtained by joining the subject-name to the subject-zone with a ‘.’ character.
The subject-name must be valid according to the nameset expression for the
zone, if any.</t>

<t>The value of the subject-zone (4) key, if present, is a UTF-8 encoded string
containing the name of the zone in which the assertion is made. If not
present, the zone of the assertion is inherited from the containing Shard or Zone.</t>

<t>The value of the context (6) key, if present, is a UTF-8 encoded string
containing the name of the context in which the assertion is valid. If not
present, the context of the assertion is inherited from the containing Shard
or Zone.</t>

<t>The value of the objects (7) key is an array of objects, as defined in 
<xref target="cbor-object"/>.</t>

</section>
<section anchor="cbor-shard" title="Shard body">

<t>A Shard body is a map. The keys present in the map depend on whether the Shard
is contained in a Message Section or in a Zone.</t>

<t>Shards contained in Message Sections are “bare Shards”. Since they cannot
inherit any values from their contained Zone, they MUST contain the content
(23), signatures (0), subject-zone (4), context (6), and shard-range (11) keys.</t>

<t>Shards within a Zone are “contained Shards”, and can inherit values from their
containing Zone. A contained Shard MUST contain the shard-range(11) and content
(23) keys. The subject-zone (4) and context (6) keys MUST NOT be present. They
are assumed to have the same value as the corresponding values in the containing
Zone for signature generation and signature verification purposes; see
<xref target="cbor-signature"/>.</t>

<t>A contained Shard SHOULD contain the signatures (0) key if it also contains a
shard-range (11) key, since an unsigned contained Shard cannot be used by a
RAINS server to answer a query for nonexistence; it must be returned in a
signed Zone.</t>

<t>The value of the content (23) key is an array of Assertion bodies as defined in
<xref target="cbor-assertion"/> .Assertions within a Shard SHOULD be sorted by name in
ascending lexicographic order.</t>

<t>The value of the signatures (0) key, if present, is an array of one or more
Signatures as defined in <xref target="cbor-signature"/>. If not present, the containing
Zone MUST be signed. Signatures on a contained Shard are generated as if the
inherited subject-zone and values are present in the Shard, whether actually
present or not. The signatures on the Shard are to be verified against the
appropriate key for the Zone containing the Shard in the given context, as
described in <xref target="signatures-in-assertions"/>.</t>

<t>The value of the subject-zone (4) key, if present, is a UTF-8 encoded string
containing the name of the zone in which the Assertions within the Shard is
made. If not present, the zone of the assertion is inherited from the
containing Zone.</t>

<t>The value of the context (6) key, if present, is a UTF-8 encoded string
containing the name of the context in which the Assertions within the Shard
are valid. If not present, the context of the assertion is inherited from the
containing Zone.</t>

<t>Shards are lexicographically complete within the range described in its the
shard-range value: a mapping for a subject-name that should be between the two
values given in the range but is not is asserted to not exist. Lexicographic
sorting is done on subject names by ordering Unicode codepoints in ascending
order.</t>

<t>The shard-range value MUST be a two element array of strings or nulls
(subject-name A, subject-name B). A must lexicographically sort before B, but
neither subject name need be present in the shard’s contents. If A is null,
the shard begins at the beginning of the zone. If B is null, the shard ends at
the end of the zone. The shard MUST NOT contain any assertions whose subject
names sort before A or after B. In addition, the authority for the shard belongs to
MUST NOT make any assertions during the period of validity of the shard’s
signatures that would fall between subject-name A and subject-name B inclusive
that are not contained within the shard 
(see <xref target="runtime-consistency-checking"/>).</t>

</section>
<section anchor="cbor-zone" title="Zone body">

<t>A Zone body is a map. Zones MUST contain the content (23), signatures (0),
subject-zone (4), and context (6) keys.</t>

<t>Signatures on the Zone are to be verified against the appropriate key for the
Zone in the given context, as described in <xref target="signatures-in-assertions"/>.</t>

<t>The value of the content (23) key is an array of Shard bodies as defined in
<xref target="cbor-shard"/> and/or Assertion bodies as defined in <xref target="cbor-assertion"/>. Shards
and Assertions in the content array SHOULD be sorted by shard range or name in ascending qlexicographic order.</t>

<t>The value of the subject-zone (4) key is a UTF-8 encoded string
containing the name of the Zone.</t>

<t>The value of the context (6) key is a UTF-8 encoded string
containing the name of the context for which the Zone is valid.</t>

</section>
<section anchor="cbor-query" title="Query body">

<t>A Query body is a map. Queries MUST contain the query-name (8),
context (6), query-types (10), and query-expires (12) keys. Queries MAY contain
the query-opts (13) keys.</t>

<t>The value of the context (6) key is a UTF-8 encoded string containing the name
of the context to which a query pertains. A zero-length string indicates that
assertions will be accepted in any context.</t>

<t>The value of the query-types (10) key is an array of integers encoding the
type(s) of objects (as in <xref target="cbor-object"/>) acceptable in answers to the query.
All values in the query-type array are treated at equal priority: [2,3] means
the querier is equally interested in both IPv4 and IPv6 addresses for the
query-name. An empty query-types array indicates that objects of any type are
acceptable in answers to the query.</t>

<t>The value of the query-expires (12) key, is a CBOR integer
counting seconds since the UNIX epoch UTC, identified with tag value 1 and
encoded as in section 2.4.1 of <xref target="RFC7049"/>. After the query-expires time, the
query will have been considered not answered by the original issuer.</t>

<t>The value of the query-opts (13) key, if present, is an array of integers in
priority order of the querier’s preferences in tradeoffs in answering the
query, as in <xref target="tabqopts"/>.</t>

<texttable title="Query Option Codes" anchor="tabqopts">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>1</c>
      <c>Minimize end-to-end latency</c>
      <c>2</c>
      <c>Minimize last-hop answer size (bandwidth)</c>
      <c>3</c>
      <c>Minimize information leakage beyond first hop</c>
      <c>4</c>
      <c>No information leakage beyond first hop: cached answers only</c>
      <c>5</c>
      <c>Expired assertions are acceptable</c>
      <c>6</c>
      <c>Enable query token tracing</c>
      <c>7</c>
      <c>Disable verification delegation (client protocol only)</c>
      <c>8</c>
      <c>Suppress proactive caching of future assertions</c>
</texttable>

<t>Options 1-5 specify performance/privacy tradeoffs. Each server is free to
determine how to minimize each performance metric requested; however, servers
MUST NOT generate queries to other servers if “no information leakage” is
specified, and servers MUST NOT return expired assertions unless “expired
assertions acceptable” is specified.</t>

<t>Option 6 specifies that a given token (see <xref target="cbor-tokens"/>) should be used on
all queries resulting from a given query, allowing traceability through an
entire RAINS infrastructure. It is meant for debugging purposes.</t>

<t>By default, a client service will perform verification of negative queries and
return a 404 No Assertion Exists for queries with a consistent proof of non-
existence, within a message signed by the query service’s infrakey. Option 7
disables this behavior, and causes the query service to return the shard
proving nonexistence for verification by the client. It is intended to be used
with untrusted query services.</t>

<t>Option 8 specifies that a querier’s interest in a query is strictly ephemeral,
and that future assertions related to this query SHOULD NOT be proactively
pushed to the querier.</t>

</section>
<section anchor="cbor-revassert" title="Address Assertion body">

<t>Assertions about addresses are similar to assertions about names, but keyed by
address and restricted in terms of the objects they can contain. An Address
Assertion body is a map which MUST contain the signatures (0), subject-addr (5),
context (6), and objects (7) keys.</t>

<t>The value of the signatures (0) key is an array of one or more Signatures as
defined in <xref target="cbor-signature"/>.</t>

<t>The value of the subject-addr (5) key is a three element CBOR array. The first
element of the array is the address family encoded as an object type, 2 for
IPv6 addresses and 3 for IPv4 addresses. The second element is the prefix
length encoded as an integer, 0-128 for IPv6 and 0-32 for IPv4. The third
element is the address, encoded as in <xref target="cbor-object"/>. Subject addresses with
the maximum prefix length for the address family are subject host addresses,
and are nameable; subject addresses with less than the maximum prefix length
are subject network addresses, and are delegatable.</t>

<t>The value of the context (6) key, if present, is a UTF-8 string containing the
name of the context in which the Address Assertion is valid. See
<xref target="context-in-address-assertions"/>.</t>

<t>The value of the objects (7) key is an array of objects, as defined in
<xref target="cbor-object"/>. Only object types redirection, delegation, and registrant are
available for subject network addresses, and only object type name is
available for subject host addresses.</t>

</section>
<section anchor="cbor-revquery" title="Address Query body">

<t>Queries for assertions about addresses are similar to queries for assertions
about names, but have semantic restrictions similar to those for Address
Assertions.</t>

<t>An Address Query body is a map. Queries MUST contain the subject-addr (5),
context (6), query-types (10), and query-expires (12) keys. Address Queries MAY contain 
query-opts (13) key.</t>

<t>The value of the subject-addr (5) key is a three-element CBOR array. The first
element of the array is the address family encoded as an object type, 2 for
IPv6 addresses and 3 for IPv4 addresses. The second element is the prefix
length encoded as an integer, 0-128 for IPv6 and 0-32 for IPv4. The third
element is the address, encoded as in <xref target="cbor-object"/>.</t>

<t>The value of the context (6) key is a UTF-8 encoded string containing the name
of the context for which the Query is valid. Unlike queries for names, Address 
Queries can only pertain to a single context. See <xref target="context-in-address-assertions"/> 
for more.</t>

<t>The value of the query-types (10) key is an array of integers encoding the
type(s) of objects (as in <xref target="cbor-object"/>) acceptable in answers to the query.
All values in the query-type array are treated at equal priority: [4,5] means
the querier is equally interested in both redirection and delegation for the
subject-addr. An empty query-types array indicates that objects of any type are
acceptable in answers to the query.</t>

<t>The value of the query-expires (12) key is a CBOR integer
counting seconds since the UNIX epoch UTC, identified with tag value 1 and
encoded as in section 2.4.1 of <xref target="RFC7049"/>. After the query-expires time, the
query will have been considered not answered by the original issuer.</t>

<t>The value of the query-opts (13) key, if present, is an array of integers in
priority order of the querier’s preferences in tradeoffs in answering the
query, as in <xref target="tabqopts"/>. See <xref target="cbor-query"/> for more.</t>

<t>An Address Assertion with a more-specific prefix is preferred over a less-specific
in response to a Address Query.</t>

</section>
<section anchor="cbor-notification" title="Notification body">

<t>Notification Message Sections contain information about the operation of the
RAINS protocol itself. A Notification Message Section body is a map which MUST
contain the token (2) and note-type (21) keys and MAY contain the note-data
(22) key. The value of the note-type key is encoded as an integer as in the
<xref target="tabnotify"/>.</t>

<texttable title="Notification Type Codes" anchor="tabnotify">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>100</c>
      <c>Connection heartbeat</c>
      <c>399</c>
      <c>Capability hash not understood</c>
      <c>400</c>
      <c>Bad message received</c>
      <c>403</c>
      <c>Inconsistent message received</c>
      <c>404</c>
      <c>No assertion exists (client protocol only)</c>
      <c>413</c>
      <c>Message too large</c>
      <c>500</c>
      <c>Unspecified server error</c>
      <c>501</c>
      <c>Server not capable</c>
      <c>504</c>
      <c>No assertion available</c>
</texttable>

<t>Note that the status codes are chosen to be mnemonically similar to status
codes for HTTP <xref target="RFC7231"/>. Details of the meaning of each status code are
given in <xref target="protocol-def"/>.</t>

<t>The value of the token (2) key is a 16-byte array, which
MUST contain the token of the message or query to which the notification is a
response. See <xref target="cbor-tokens"/>.</t>

<t>The value of the note-data (22) key, if present, is a UTF-8 encoded string
with additional information about the notification, intended to be displayed
to an administrator to help debug the issue identified by the negotiation.</t>

</section>
<section anchor="cbor-object" title="Object">

<t>Objects are encoded as arrays in CBOR, where the first element is the type of
the object, encoded as an integer in the following table:</t>

<texttable title="Object type codes" anchor="tabobj">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>1</c>
      <c>name</c>
      <c>name associated with subject</c>
      <c>2</c>
      <c>ip6-addr</c>
      <c>IPv6 address of subject</c>
      <c>3</c>
      <c>ip4-addr</c>
      <c>IPv4 address of subject</c>
      <c>4</c>
      <c>redirection</c>
      <c>name of zone authority server</c>
      <c>5</c>
      <c>delegation</c>
      <c>public key for zone delgation</c>
      <c>6</c>
      <c>nameset</c>
      <c>name set expression for zone</c>
      <c>7</c>
      <c>cert-info</c>
      <c>certificate information for name</c>
      <c>8</c>
      <c>service-info</c>
      <c>service information for srvname</c>
      <c>9</c>
      <c>registrar</c>
      <c>registrar information</c>
      <c>10</c>
      <c>registrant</c>
      <c>registrant information</c>
      <c>11</c>
      <c>infrakey</c>
      <c>public key for RAINS infrastructure</c>
      <c>12</c>
      <c>extrakey</c>
      <c>external public key for subject</c>
      <c>13</c>
      <c>nextkey</c>
      <c>next public key for subject</c>
</texttable>

<t>A name (1) object contains a name associated with a name as an alias. It is
represented as a three-element array. The second element is a fully-qualified
name as a UTF-8 encoded string. The third type is an array of object type
codes for which the alias is valid, with the same semantics as the query-types
(9) key in queries (see <xref target="cbor-query"/>).</t>

<t>An ip6-addr (2) object contains an IPv6 address associated with a name. It is
represented as a two element array. The second element is a byte array of
length 16 containing an IPv6 address in network byte order.</t>

<t>An ip4-addr (3) object contains an IPv4 address associated with a name. It is
represented as a two element array. The second element is a byte array of
length 4 containing an IPv4 address in network byte order.</t>

<t>A redirection (4) object contains the fully-qualified name of a RAINS
authority server for a named zone. It is represented as a two-element array.
The second element is a fully-qualified name of an RAINS authority server as a
UTF-8 encoded string.</t>

<t>A delegation (5) object contains a public key used to generate signatures
on assertions in a named zone, and by which a delegation of a name within a
zone to a subordinate zone may be verified. It is represented as an N-element
array. The second element is a signature algorithm identifier as in 
<xref target="cbor-signature"/>. Additional elements are as defined in <xref target="cbor-signature"/> 
for the given algorithm identifier and keyspace.</t>

<t>A nameset (6) object contains an expression defining which names are allowed
and which names are disallowed in a given zone. It is represented as a two-
element array. The second element is a nameset expression to be applied to
each name element within the zone without an intervening delegation, as
defined in <xref target="cbor-nameset"/></t>

<t>A cert-info (7) object contains an expression binding a certificate or
certificate authority to a name, such that connections to the name must either
use the bound certificate or a certificate signed by a bound authority. It is
represented as an five-element array, as defined in <xref target="cbor-certinfo"/>.</t>

<t>A service-info (8) object gives information about a named service. Services
are named as in <xref target="RFC2782"/>. It is represented as a four-element array. The
second element is a fully-qualified name of a host providing the named service
as a UTF-8 string. The third element is a transport port number as a positive
integer in the range 0-65535. The fourth element is a priority as a positive
integer, with lower numbers having higher priority.</t>

<t>A registrar (9) object gives the name and other identifying information of the
registrar (the organization which caused the name to be added to the
namespace) for organization-level names. It is represented as a two element array. 
The second element is a UTF-8 string of maximum length 256 bytes containing identifying 
information chosen by the registrar according to the registry’s policy.</t>

<t>A registrant (10) object gives information about the registrant of an
organization-level name. It is represented as a two element array. The second 
element is a UTF-8 string with a maximum length of 4096 bytes containing this 
information, with a format chosen by the registrar according to the registry’s policy.</t>

<t>An infrakey (11) object contains a public key used to generate signatures on
messages by a named RAINS server, by which a RAINS message signature may be
verified by a receiver. It is identical in structure to a delegation object,
as defined in <xref target="cbor-signature"/>. Infrakey signatures are especially useful
for clients which delegate verification to their query servers to authenticate
the messages sent by the query server.</t>

<t>An extrakey (12) object contains a public key used to generate signatures on
assertions in a named zone outside of the normal delegation chain. It is
represented as an 4-element array, where the second element is a signature
algorithm identifier, and the third element is keyspace identifier, as in
<xref target="cbor-signature"/>. The fourth element is the public key, as defined in
<xref target="cbor-signature"/> for the given algorithm identifier. An extrakey may be
matched with a public key obtained through other means for additional
authentication of an assertion. Extrakeys are different from delegation keys in
that they may not be used in the delegation chain: an extrakey signature is
valid only on assertions of object types other than delegation.</t>

<t>A nextkey (13) object contains the a public key that a zone owner would like its
superordinate to delegate to in the future. It is represented as an 5-element
array The second element is a signature algorithm identifier as in
<xref target="cbor-signature"/>. The third element is the public key, as defined in
<xref target="cbor-signature"/> for the given algorithm identifier. The fourth element is the
requested-valid-since time, and the fifth element is the requested-valid-until
time, formatted as for signatures as in <xref target="cbor-signature"/>. See
<xref target="public-key-management"/> for more.</t>

<section anchor="cbor-certinfo" title="Certificate information format">

<t>A cert-info object contains information about the certificate(s) that can be
used to authenticate a transport-layer association with a named entity. It is
encoded as a file-element array. The first element is the RAINS object type
(7). The second element is the protocol family specifier, describing the
cryptographic protocol used to connect, as defined in <xref target="tabcertproto"/>. The
protocol family defines the format of certificate data to be hashed. The third
element is the certificate usage specifier as in <xref target="tabcertusage"/>, describing
the constraint imposed by the assertion. These are defined to be compatible
with Certificate Usages in the TLSA RRTYPE for DANE <xref target="RFC6698"/>. The fourth
element is the hash algorithm identifier, defining the hash algorithm used to
generate the certificate data. The fifth item is the data itself, whose format
is defined by the protocol family and hash algorithm.</t>

<texttable title="Certificate information protocol families" anchor="tabcertproto">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Protocol family</ttcol>
      <ttcol align='left'>Certificate format</ttcol>
      <c>0</c>
      <c>unspec</c>
      <c>Unspecified</c>
      <c>Unspecified</c>
      <c>1</c>
      <c>tls</c>
      <c>Transport Layer Security (TLS) <xref target="RFC5246"/></c>
      <c><xref target="RFC5280"/></c>
</texttable>

<t>Protocol family 0 leaves the protocol family unspecified; client validation
and usage of cert-info assertions, and the protocol used to connect, are up to
the client, and no information is stored in RAINS. Protocol family 1 specifies
Transport Layer Security version 1.2 <xref target="RFC5246"/> or a subsequent version,
secured with PKIX <xref target="RFC5280"/> certificates.</t>

<texttable title="Certificate information usage values" anchor="tabcertusage">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Certificate usage</ttcol>
      <c>2</c>
      <c>ta</c>
      <c>Trust Anchor Certificate</c>
      <c>3</c>
      <c>ee</c>
      <c>End-Entity Certificate</c>
</texttable>

<t>A trust anchor certificate constraint specifies a certificate that MUST appear
as the trust anchor for the certificate presented by the subject of the
assertion on a connection attempt. An end-entity certificate constraint
specifies a certificate that MUST be presented by the subject of the assertion
on a connection attempt.</t>

<texttable title="Certificate information hash algorithms" anchor="tabcerthash">
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Notes</ttcol>
      <c>0</c>
      <c>full</c>
      <c>Data contains full certificate</c>
      <c>1</c>
      <c>sha-256</c>
      <c>Data contains SHA-256 hash (32 bytes)</c>
      <c>2</c>
      <c>sha-512</c>
      <c>Data contains SHA-512 hash (64 bytes)</c>
      <c>3</c>
      <c>sha-384</c>
      <c>Data contains SHA-384 hash (48 bytes)</c>
</texttable>

<t>Code 0 is used to store full certificates in RAINS assertions, while other
codes are used to store hashes for verification.</t>

<t>For example, in a cert-info object with values [ 7, 1, 3, 3, (data) ], the
data would be a 48 SHA-384 hash of the ASN.1 DER-encoded X.509v3 certificate
(see Section 4.1 of <xref target="RFC5280"/>) to be presented by the endpoint on a
connection attempt with TLS version 1.2 or later.</t>

</section>
<section anchor="cbor-nameset" title="Name expression format">

<t>The nameset expression is represented as a UTF-8 string encoding a modified POSIX
Extended Regular Expression format (see POSIX.2) to be applied to each element
of a name within the zone. A name containing an element that does not match
the valid nameset expression for a zone is not valid within the zone, and the
nameset assertion can be used to prove nonexistence.</t>

<t>The POSIX character classes :alnum:, :alpha:, :ascii:, :digit:, :lower:, and :upper: are available in these regular expressions, where:</t>

<t><list style="symbols">
  <t>:lower: matches all codepoints within the Unicode general category “Letter, lowercase”</t>
  <t>:upper: matches all codepoints within the Unicode general category “Letter, uppercase”</t>
  <t>:alpha: matches all codepoints within the Unicode general category “Letter”.</t>
  <t>:digit: matches all codepoints within the Unicode general category “Number, decimal digit”</t>
  <t>:alnum: is the union of :alpha: and :digit:</t>
  <t>:ascii: matches all codepoints in the range 0x20-0x7f</t>
</list></t>

<t>In addition, each Unicode block is available as a character class, with the syntax :ublkXXXX: where XXXX is a 4 or 5 digit, zero-prefixed hex encoding of the first codepoint in the block. For example, the Cyrillic block is available as :ublk0400:.</t>

<t>Unicode escapes are supported in these regular expressions; the sequence
\uXXXX where XXXX is a 4 or 5 digit, possibly zero-prefixed hex encoding of
the codepoint, is substituted with that codepoint.</t>

<t>Set operations (intersection and subtraction) are available on character
classes. Two character class or range expressions in a bracket expression
joined by the sequence &amp;&amp; are equivalent to the intersection of the two
character classes or ranges. Two character class or range expressions in a
bracket expression joined by the sequence – are equivalent to the subtraction
of the second character class or range from the first.</t>

<t>For example, the nameset expression:</t>

<t>[[:ublk0400:]&amp;&amp;[:lower:][:digit:]]+</t>

<t>matches any name made up of one or more lowercase Cyrillic letters and digits. The same expression can be implemented with a range instead of a character class:</t>

<t>[\u0400-\u04ff&amp;&amp;[:lower:][:digit:]]+</t>

</section>
</section>
<section anchor="cbor-tokens" title="Tokens in queries and messages">

<t>Messages and notifications contain an opaque token (2) key, whose
content is a 16-byte array, and is used to link Messages to the Queries they
respond to, and Notifications to the Messages they respond to. Tokens MUST be
treated as opaque values by RAINS servers.</t>

<t>A Message sent in response to a Query MUST contain the token of the Message containing the Query.
Otherwise, the Message MUST contain a token selected by the server
originating it, so that future Notifications can be linked to the Message
causing it. Likewise, a Notification sent in response to a Message MUST
contain the token from the Message causing it (where the new Message contains a
fresh token selected by the server). This allows sending multiple Notifications
within one Message and the receiving server to respond to a Message containing 
Notifications (e.g. when it is malformed).</t>

<t>Since tokens are used to link queries to replies, and to link notifications to
messages, regardless of the sender or recipient of a message, they MUST be chosen
by servers to be hard to guess; e.g. generated by a cryptographic random number
generator.</t>

<t>When a server creates a new query to forward to another server in response to
a query it received, it MUST NOT use the same token on the delegated query
as on the received query, unless option 6 Enable Tracing is present in the
received, in which case it MUST use the same token.</t>

</section>
<section anchor="cbor-signature" title="Signatures, delegation keys, and RAINS infrastructure keys">

<t>RAINS supports multiple signature algorithms and hash functions for signing
assertions for cryptographic algorithm agility <xref target="RFC7696"/>. A RAINS signature
algorithm identifier specifies the signature algorithm; a hash function for
generating the HMAC and the format of the encodings of the signature
values in Assertions, Shards, Zones, and Messages, as well as of public key
values in delegation objects.</t>

<t>RAINS signatures have five common elements: the algorithm identifier, a keyspace
identifier, a keyphase identifier, a valid-since timestamp, and a valid-until
timestamp. Signatures are represented as an array of these five values followed
by additional elements containing the signature data itself, according to the
algorithm identifier.</t>

<t>The following algorithms are supported:</t>

<texttable title="Defined signature algorithms" anchor="tabsig">
      <ttcol align='right'>Alg ID</ttcol>
      <ttcol align='left'>Signatures</ttcol>
      <ttcol align='left'>Hash/HMAC</ttcol>
      <ttcol align='left'>Format</ttcol>
      <c>1</c>
      <c>ed25519</c>
      <c>sha-512</c>
      <c>See <xref target="eddsa-format"/></c>
      <c>2</c>
      <c>ed448</c>
      <c>shake256</c>
      <c>See <xref target="eddsa-format"/></c>
      <c>3</c>
      <c>ecdsa-256</c>
      <c>sha-256</c>
      <c>See <xref target="ecdsa-format"/></c>
      <c>4</c>
      <c>ecdsa-384</c>
      <c>sha-384</c>
      <c>See <xref target="ecdsa-format"/></c>
</texttable>

<t>As noted in <xref target="eddsa-format"/>, support for Algorithm 1, ed25519, is REQUIRED; other
algorithms are OPTIONAL.</t>

<t>The keyspace identifier associates the signature with a method for verifying
signatures. This facility is used to support signatures on assertions from
external sources (the extrakey object type). At present, one keyspace identifier
is defined, and support for it is REQUIRED.</t>

<texttable>
      <ttcol align='right'>Keyspace ID</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Signature Verification Algorithm</ttcol>
      <c>0</c>
      <c>rains</c>
      <c>RAINS delegation chain; see <xref target="cbor-signature"/></c>
</texttable>

<t>Within the RAINS delegation chain keyspace, the key phase is an unbounded,
unsigned integer matching a signature’s key phase to the delegation key phase.
Multiple keys may be valid for a delegation at a given point in time, in order
to support seamless rollover of keys, but only one per key phase and algorithm
may be valid at once. The third element of delegation objects and signatures is
the key phase.</t>

<t>Valid-since and valid-until timestamps are represented as CBOR integers
counting seconds since the UNIX epoch UTC, identified with tag value 1 and
encoded as in section 2.4.1 of <xref target="RFC7049"/>. A signature MUST have a
valid-until timestamp. If a signature has no specified valid-since time (i.e.,
is valid from the beginning of time until its valid-until timestamp), the
valid-since time MAY be null (as in Table 2 in Section 2.3 of <xref target="RFC7049"/>).</t>

<t>A signature in RAINS is generated over a byte stream representing the message in
a canonical signing format. The signing process is defined as follows:</t>

<t><list style="symbols">
  <t>Parse the object to be signed into a byte stream according to the format
specified in <xref target="signing-format"/>.</t>
  <t>Generate a signature on the resulting byte stream according to the algorithm
selected.</t>
  <t>Add the full signature to the signatures array at the appropriate point in
the object.</t>
</list></t>

<t>To verify a signature, generate the byte stream as for signing, then verify
the signature according to the algorithm selected.</t>

<section anchor="eddsa-format" title="EdDSA signature and public key format">

<t>EdDSA public keys consist of a single value, a 32-byte bit string generated as
in Section 5.1.5 of <xref target="RFC8032"/> for Ed25519, and a 57-byte bit string generated
as in Section 5.2.5 of <xref target="RFC8032"/> for Ed448. The fourth element in a RAINS
delegation object is this bit string encoded as a CBOR byte array. RAINS
delegation objects for Ed25519 keys with value k are therefore
represented by the array [5, 1, phase, k]; and for Ed448 keys as [5, 2, phase, k].</t>

<t>Ed25519 and Ed448 signatures are are a combination of two non-negative
integers, called “R” and “S” in sections 5.1.6 and 5.2.6, respectively, of
<xref target="RFC8032"/>. An Ed25519 signature is represented as a 64-byte array containing
the concatenation of R and S, and an Ed448 signature is represented as a
114-byte array containing the concatenation of R and S. RAINS signatures using
Ed25519 are therefore the array [1, 0, phase, valid-since, valid-until, R|S]; using Ed448
the array [2, 0, phase, valid-since, valid-until, R|S].</t>

<t>Ed25519 keys are generated as in Section 5.1.5 of <xref target="RFC8032"/>, and Ed448 keys
as in Section 5.2.5 of <xref target="RFC8032"/>.  Ed25519 signatures are generated from a
normalized serialized CBOR object as in Section 5.1.6 of <xref target="RFC8032"/>, and
Ed448 signatures as in section 5.2.6 of <xref target="RFC8032"/>.</t>

<t>RAINS Server and Client implementations MUST support Ed25519 signatures for
delegation.</t>

</section>
<section anchor="ecdsa-format" title="ECDSA signature and public key format">

<t>ECDSA public keys consist of a single value, called “Q” in <xref target="FIPS-186-3"/>. Q
is a simple bit string that represents the uncompressed form of a curve point,
concatenated together as “x | y”. The fourth element in a RAINS delegation
object is the Q bit string encoded as a CBOR byte array. RAINS delegation
objects for ECDSA-256 public keys are therefore represented as the array 
[5, 3, phase, Q]; and for ECDSA-384 public keys as [5, 4, phase, Q].</t>

<t>ECDSA signatures are a combination of two non-negative integers, called “r”
and “s” in <xref target="FIPS-186-3"/>. A Signature using ECDSA is represented using a
four-element CBOR array, with the fourth element being “r | s” such that r is
represented as a byte array as described in Section C.2 of <xref target="FIPS-186-3"/>, and
s represented as a byte array as described in Section C.2 of <xref target="FIPS-186-3"/>.
For ECDSA-256 signatures, each integer MUST be represented as a 32-byte array.
For ECDSA-384 signatures, each integer MUST be represented as a 48-byte array.
RAINS signatures using ECDSA-256 are therefore the array [3, 0, phase, valid-since,
valid-until, r|s]; and for ECDSA-384 the array [4, 0, phase, valid-since, valid-until,
r|s].</t>

<t>ECDSA-256 signatures and public keys use the P-256 curve as defined in <xref target="FIPS-186-3"/>.
ECDSA-384 signatures and public keys use the P-384 curve as defined in <xref target="FIPS-186-3"/>.</t>

<t>ECDSA-256 and ECDSA-384 support are primarily meant for compatibility with and
migration from existing DNSSEC deployments; see <xref target="dns-transition"/>.</t>

</section>
</section>
<section anchor="cbor-capabilities" title="Capabilities">

<t>When a RAINS server or client sends the first message in a stream to a peer,
it MAY expose optional capabilities to its peer using the capabilities (1)
key. This key contains either:</t>

<t><list style="symbols">
  <t>an array of uniform resource names specifying capabilities supported by the
sending server, taken from the table below, with each name encoded as a
UTF-8 string.</t>
  <t>a SHA-256 hash of the CBOR byte stream derived from normalizing such an
array by sorting it in lexicographically increasing order, then serializing
it.</t>
</list></t>

<t>This mechanism is inspired by <xref target="XEP0115"/>, and is intended to be used to
reduce the overhead in exposing common sets of capabilities. Each RAINS server
can cache a set of recently-seen or common hashes, and only request the full
URN set (using notification code 399) on a cache miss.</t>

<t>The following URNs are presently defined; other URNs will specify future
optional features, support for alternate transport protocols and new signature
algorithms, etc.</t>

<texttable>
      <ttcol align='left'>URN</ttcol>
      <ttcol align='left'>Meaning</ttcol>
      <c>urn:x-rains:tlssrv</c>
      <c>Listens for connections on TLS over TCP from other RAINS servers.</c>
</texttable>

<t>Since there are only two defined capabilities at this time, RAINS servers can
be implemented with two hard-coded hashes to determine whether a peer is
listening or not. The hash presented by a server supporting urn:x-rains:tlssrv
is e5365a09be554ae55b855f15264dbc837b04f5831daeb321359e18cdabab5745; the hash
presented by a server supporting no capabilities is
76be8b528d0075f7aae98d6fa57a6d3c83ae480a8469e668d7b0af968995ac71.</t>

<t>Servers MAY piggyback capability negotiation on other messages, or use dedicated messages for capability negotiation.</t>

<t>A RAINS server MUST NOT assume that a peer server supports a given capability
unless it has received a message containing that capability from that server.
An exception are the capabilities indicating that a server listens for
connections using a given transport protocol; servers and clients can also
learn this information from RAINS itself (given a redirection assertion for a
named zone) or from external configuration values.</t>

</section>
</section>
<section anchor="signing-format" title="Canonical signing format">

<t>[EDITOR’S NOTE: to define, based on CBOR canonicalization, once this is implemented.]</t>

</section>
<section anchor="protocol-def" title="RAINS Protocol Definition">

<t>As noted in <xref target="cbor"/>, RAINS is a message-exchange protocol that uses CBOR
<xref target="RFC7049"/> as its framing. Since CBOR is self-framing – a CBOR parser can
determine when a CBOR object is complete at the point at which it has read its
final byte – RAINS requires no external framing. It can therefore run over
any streaming, multistreaming, or message-oriented transport protocol. In
order to protect query confidentiality, and support rapid deployment over a
ubiquitously implemented transport, RAINS is defined in this document to run
over persistent TLS 1.2 connections <xref target="RFC5246"/> over TCP <xref target="RFC0793"/> with
mutual authentication between servers, and authentication of servers by
clients. The TLS certificates of RAINS server peers can be verified as
specified in the cert-info assertions for those servers.</t>

<t>RAINS servers MUST support this transport; future transports can be negotiated
using the capabilities mechanism after bootstrapping using TLS 1.2. As RAINS
is an experimental protocol, RAINS servers listen on port 1022 <xref target="RFC4727"/> for
connections from other RAINS servers and clients. RAINS servers should strive
to keep connections open to peer servers, unless it is clear that no future
messages will be exchanged with those peers, or in the face of resource
limitations at either peer. If a RAINS server needs to send a message to
another RAINS server to which it does not have an open connection, it attempts
to open a connection with that server.</t>

<t>This section describes the operation of the protocol as used among RAINS
servers. A simplified version of the protocol for client access is described in
<xref target="protocol-client"/>, and a simplified version of the protocol for publication by
authorities is described in <xref target="protocol-publish"/>.</t>

<section anchor="protocol-processing" title="Message processing">

<t>Once a transport is established, any server may validly send a message with
any content to any other server. A client may send messages containing queries
to servers, and a server may sent messages containing anything other than
queries to clients.</t>

<t>Upon receipt of a message, a server or client attempts to parse it.</t>

<t>If the server or client cannot parse the message at all, it returns a 400 Bad
Message notification to the peer. This notification may have a null token if the
token cannot be retrieved from the message.</t>

<t>If the server or client can parse the message, it:</t>

<t><list style="symbols">
  <t>notes the token on the message. This token MUST be present on any
messages sent in reply to this message.</t>
  <t>processes any capabilities present, replacing the set of capabilities known
for the peer with the set present in the message. If the present
capabilities are represented by a hash that the server does not have in its
cache, it prepares a notification of type 399 “Capability hash not
understood” to send to its peer.</t>
  <t>splits the contents into its constituent message sections, and verifies that
each is acceptable. Specifically, queries are not accepted by clients (see
<xref target="protocol-client"/>), and 404 No Assertion Exists notifications are not
accepted by servers. If a message contains an unacceptable section, the server
or client returns a 400 Bad Message notification to its peer, and ceases
processing of the message.</t>
</list></t>

<t>On receipt of an assertion, shard, or zone message section, a server:</t>

<t><list style="symbols">
  <t>verifies its consistency (see <xref target="runtime-consistency-checking"/>). If the
section is not consistent, it prepares to send a notification of type 403
Inconsistent Message to the peer, and discards the section. Otherwise, it:</t>
  <t>determines whether it answers an outstanding query; if so, it prepares to
forward the section to the server that issued the query.</t>
  <t>determines whether it is likely to answer a future query, according to its 
configuration, policy, and query history; if so, it caches the section.</t>
</list></t>

<t>On receipt of an assertion, shard, or zone message section, a client:</t>

<t><list style="symbols">
  <t>determines whether it answers an outstanding query; if so, it considers the
query answered. It then:</t>
  <t>determines whether it is likely to answer a future query, according to its 
configuration, policy, and query history; if so, it caches the section.</t>
</list></t>

<t>On receipt of a query, a server:</t>

<t><list style="symbols">
  <t>determines whether it has expired by checking the query-expires value. 
If so, it drops the query silently. If not, it:</t>
  <t>determines whether it has a stored assertion, shard, and/or zone message
section which answers the query. If so, it prepares to return the most
specific such section (i.e., if it has both a shard and an assertion that
would answer the query, it returns the assertion) with the signature of the
longest remaining validity to the peer that issued the query. If not, it:</t>
  <t>checks to see whether the query specifies option 4 (cached answers only). If
so, and if option 5 (expired assertions acceptable) is also specified, it then
checks to see if it has any cached sections that answer the query on which
signatures are expired; otherwise, processing stops, and the server returns a
504 No Assertion Available notification, as if the query had instantly
expired.. If the query does not specify option 4, delegation proceeds, and the
server:</t>
  <t>determines whether it has other non-authoritative servers it can forward the
query to, according to its configuration and policy, and in compliance with
any query options (see <xref target="cbor-query"/>). If so, it prepares to forward the
query to those servers, noting the reply for the received query depends on
the replies for the forwarded query. If not, it:</t>
  <t>determines the responsible authority servers for the zone containing the
query name in the query for the context requested, and forwards the query to
those authority servers, noting the reply for the received query depends on
the reply for the forwarded query.</t>
</list></t>

<t>If query delegation fails to return an answer within the maximum of the
valid-until time in the received query and a configured maximum timeout for a
delegated query, the server prepares to send a 504 No assertion available
response to the peer from which it received the query.</t>

<t>When a server creates a new query to forward to another server in response to
a query it received, it SHOULD NOT use the same token on the delegated query
as on the received query, unless option 6 Enable Tracing is present in the
received, in which case it MUST use the same token. The Enable Tracing option
is designed to allow debugging of query processing across multiple servers, It
SHOULD only be enabled by clients designed explicitly for debugging RAINS
itself, and MUST NOT be enabled by default by client resolvers.</t>

<t>When a server creates a new query to forward to another server in response to a
query it received, and the received query contains a query-expires time, the
delegated query MUST NOT have a query-expires time after that in the received
query. If the received query contains no query-expires time, the delegated query
MAY contain a query- expires time of the server’s choosing, according to its
configuration.</t>

<t>On receipt of a notification, a server’s behavior depends on the notification type:</t>

<t><list style="symbols">
  <t>For type 100 “Connection Heartbeat”, the server does nothing: these null
messages are used to keep long-lived connections open in the presence of
network behaviors that may drop state for idle connections.</t>
  <t>For type 399 “Capability hash not understood”, the server prepares to send a
full capabilities list on the next message it sends to the peer.</t>
  <t>For type 504 “No assertion available”, the server checks the token on the
message, and prepares to forward the assertion to the associated query.</t>
  <t>For type 413 “Message too large” the server notes that large messages may 
not be sent to a peer and tries again (see <xref target="protocol-limits"/>), or logs
the error along with the note-data content.</t>
  <t>For type 400 “Bad message”, type 403 “Inconsistent message”, type 500
“Server error”, or type 501 “Server not capable”, the server logs the error
along with the note-data content, as these notifications generally represent
implementation or configuration error conditions which will require human
intervention to mitigate.</t>
</list></t>

<t>On receipt of a notification, a client’s behavior depends on the notification type:</t>

<t><list style="symbols">
  <t>For type 100 “Connection Heartbeat”, the client does nothing, as above.</t>
  <t>For type 399 “Capability hash not understood”, the client prepares to send a
full capabilities list on the next message it sends to the peer.</t>
  <t>For type 404 “No assertion exists”, the client takes the query to be
unanswerable. It may reissue the query with query option 7 to do the
verification of nonexistence again, if the server from which it received the
notification is untrusted.</t>
  <t>For type 413 “Message too large” the client notes that large messages may 
not be sent to a peer and tries again (see <xref target="protocol-limits"/>), or logs
the error along with the note-data content.</t>
  <t>For type 400 “Bad message”, type 403 “Inconsistent message”, type 500
“Server error”, or type 501 “Server not capable”, the client logs the error
along with the note-data content, as these notifications generally represent
implementation or configuration error conditions which will require human
intervention to mitigate.</t>
</list></t>

<t>The first message a server or client sends to a peer after a new connection is
established SHOULD contain a capabilities section, if the server or client
supports any optional capabilities. See <xref target="cbor-capabilities"/>.</t>

<t>If the server is configured to keep long-running connections open, due to the
presence of network behaviors that may drop state for idle connections, it
SHOULD send a message containing a type 100 Connection Heartbeat notification
after a configured idle time without any messages containing other content
being sent.</t>

<t>In general, servers should follow the principles laid out in Sections 4.1 and
4.2 of <xref target="I-D.thomson-postel-was-wrong"/>. A malformed message section, or a
message section with any invalid (but not expired) signature, should be dropped
and log. A malformed message section or invalid signature should not, however,
result in other sections in the same message being dropped, except as explicitly noted above.</t>

</section>
<section anchor="message-transmission" title="Message Transmission">

<t>As noted in <xref target="protocol-processing"/> many messages are sent in reply to messages
received from peers. Servers may also originate messages on their own, based
on their configuration and policy:</t>

<t><list style="symbols">
  <t>Proactive queries to retrieve assertions, shards, and zones for which all
signatures have expired or will soon expire, for cache management purposes.</t>
  <t>Proactive push of assertions, shards, and zones to other servers, based on
query history or other information indicating those servers may query for
the assertions they contain.</t>
</list></t>

</section>
<section anchor="protocol-limits" title="Message Limits">

<t>RAINS servers MUST accept messages up to 65536 bytes in length, but MAY accept
messages of greater length, subject to resource limitations of the server. A
server with resource limitations MUST respond to a message rejected due to
length restrictions with a notification of type 413 (Message Too Large). A
server that receives a type 413 notification must note that the peer sending
the message only accepts messages smaller than the largest message it’s
successfully sent that peer, or cap messages to that peer to 65536 bytes in
length.</t>

<t>Since a bare assertion with a single Ed25519 signature requires on the order of
180 bytes, it is clear that many full zones won’t fit into a single minimum
maximum-size message. Authorities are therefore encouraged to publish zones
grouped into shards that will fit into 65536-byte messages, to allow servers
to reply using these shards when full-zone transfers are not possible due to
message size limitations.</t>

</section>
<section anchor="runtime-consistency-checking" title="Runtime Consistency Checking">

<t>The data model used by the RAINS protocol allows inconsistent information to
be asserted, all resulting from misconfigured or misbehaving authority
servers. The following types of inconsistency are possible:</t>

<t><list style="symbols">
  <t>A shard omits an assertion within its shard-range which is valid at the same
time as the shard.</t>
  <t>A zone omits an assertion within its zone which is valid at the same time
as the zone.</t>
  <t>An address assertion contains an object that is not allowed (see <xref target="cbor-revassert"/>)</t>
  <t>An assertion prohibited by its zone’s nameset is valid at the same time
as the zone’s nameset assertion.</t>
  <t>A zone contains a valid reflexive assertion of a given object type at the same
time that its superordinate zone contains a valid assertion of the same type.</t>
  <t>Delegations to more than one key are simultaneously valid for a given context,
zone, signature algorithm, and key phase.</t>
</list></t>

<t>RAINS relies on runtime consistency checking to mitigate inconsistency: each
server receiving an assertion, shard, or zone SHOULD, subject to resource
constraints, ensure that it is consistent with other information it has, and
if not, discard all assertions, shards, and zones in its cache, log the error,
and send a 403 Inconsistent Message to the source of the message.</t>

</section>
<section anchor="integrity-and-confidentiality-protection" title="Integrity and Confidentiality Protection">

<t>Assertions are not valid unless they contain at least one signature that can
be verified from the chain of authorities specified by the name and context on
the assertion; integrity protection is built into the information model. The
infrastructure key object type allows keys to be associated with RAINS
servers in addition to zone authorities, which allows a client to
delegate integrity verification of assertions to a trusted query service (see
<xref target="protocol-client"/>).</t>

<t>Since the job of an Internet naming service is to provide publicly-available
information mapping names to information needed to connect to the services
they name, confidentiality protection for assertions is not a goal of the
system. Specifically, the information model and the mechanism for proving
non-existence of an assertion is not designed to provide resistance against
zone enumeration.</t>

<t>On the other hand, confidentiality protection of query information in crucial.
Linking naming queries to a specific user can be nearly as useful to build a
profile of that user for surveillance purposes as full access to the clear
text of that client’s communications <xref target="RFC7624"/>. In this revision, RAINS uses
TLS to protect communications between servers and between servers and clients,
with certificate information for RAINS infrastructure stored in RAINS itself.
Together with hop-by-hop confidentiality protection, query options, proactive
caching, default use of non-persistent tokens, and redirection among servers
can be used to mix queries and reduce the linkability of query information to
specific clients.</t>

</section>
<section anchor="cooperative-delegation-distribution" title="Cooperative Delegation Distribution">

<t>Regardless of any other configuration directive, a RAINS server MUST be prepared to
provide a full chain of delegation assertions from the appropriate delegation
root to the signature on any assertion it gives to a peer or a client, whether
as additional assertions on a message answering a query, or in reply to a subsequent query. This property allows RAINS servers to maintain a full delegation tree</t>

</section>
</section>
<section anchor="protocol-client" title="RAINS Client Protocol">

<t>The protocol used by clients to issue queries to and receive responses from an
query service is a subset of the full RAINS protocol, with the following
differences:</t>

<t><list style="symbols">
  <t>Clients only process assertion, shard, zone, and notification sections;
sending a query to a client results in a 400 Bad Message notification.</t>
  <t>Clients never listen for connections; a client must initiate and maintain a
transport session to the query server(s) it uses for name resolution.</t>
  <t>Servers only process query and notification sections when connected to
clients; a client sending assertions to a server results in a 400 Bad
Message notification.</t>
</list></t>

<t>Since signature verification is resource-intensive, clients delegate signature
verification to query servers by default. The query server signs the message
containing results for a query using its own key (published as an infrakey
object associated with the query server’s name), and a validity time
corresponding to the signature it verified with the longest lifetime,
stripping other signatures from the reply. This behavior can be disabled by a
client by specifying query option 7, allowing the client to do its own
verification.</t>

</section>
<section anchor="protocol-publish" title="RAINS Publication Protocol">

<t>The protocol used by authorities to publish assertions to an authority service
is a subset of the full RAINS protocol, with the following differences:</t>

<t><list style="symbols">
  <t>Servers only process assertion, shard, zone, and notification sections when connected to publishers; sending a query to a server via the publication procotol results in a 400 Bad Message notification. Servers only process notifications for capability negotiation purposes (see <xref target="cbor-capabilities"/>).</t>
  <t>Publishers only process notification sections; sending a query or assertion to a publisher results in a 400 Bad Message notification.</t>
</list></t>

</section>
<section anchor="deployment-considerations" title="Deployment Considerations">

<t>The following subsections discuss issues that must be considered in any
deployment of RAINS at scale.</t>

<section anchor="assertion-lifetime-management" title="Assertion Lifetime Management">

<t>An assertion can contain multiple signatures, each with a different lifetime.
Signature lifetimes are equivalent to a time to live in the present DNS:
authorities should compute a new signature for each validity period, and make
these new signatures available when old ones are expiring.</t>

<t>Since assertion lifetime management is based on a real-time clock expressed in
UTC, RAINS servers MUST use a clock synchronization protocol such as NTP
<xref target="RFC5905"/>.</t>

<t>RAINS servers MAY coalesce assertion lifetimes, e.g. using only the most recent
valid-until time in their cache management. This implies that an assertion with
valid signatures in time intervals (T1, T2) and (T3, T4) such that T3 &gt; T2 may
be cached during the interval (T2, T3) as well. Authorites MUST NOT rely on
non-caching or non-availability of assertions during such intervals.</t>

</section>
<section anchor="secret-key-management" title="Secret Key Management">

<t>The secret keys associated with public keys for each RAINS server (via
infrakey objects) must be available on that server, whether through a hardware
or software security device, so they can sign messages on demand; this is
particularly important for query servers. In addition, the secret keys
associated with TLS certificates for each server (published via certinfo
objects) must be available as well in order to establish TLS sessions.</t>

<t>However, storing zone secret keys (associated via delegation objects) on RAINS
servers would represent a more serious operational risk. To keep this from
being necessary, authority servers have an additional signer interface, from
which they will accept and cache any assertion, shard, or zone for which they
are authority servers until at least the end of validity of the last
signature, provided the signature is verifiable.</t>

</section>
<section anchor="public-key-management" title="Public Key Management">

<t>As signature lifetime is used to manage assertion lifetime, and key rotation
strategies may be used both for revocation as well as operational flexibility
purposes, RAINS presents a much more dynamic key management environment than
that presented by DNSSEC.</t>

<section anchor="key-phase-and-key-rotation" title="Key Phase and Key Rotation">

<t>Each signature and public key in a RAINS message is associated with a key phase,
allowing multiple keys to be valid for a given authority at any given time. For
example, given two key phases and a key validity interval of one day, a phase 0
key would be valid from 00:00 on day 0 to 00:00 on day 1, and a phase 1 key
valid from 12:00 on day 0 to 12:00 on day 1. When the phase 0 key expires, it
would be replaced by a new phase 0 valid from 00:00 on day 1 to 00:00 on day 2,
and so on.</t>

<t>Since the end time of the validity of a signature on an assertion is the maximum
of the validity of the signatures on each of the delegations in the delegation
chain from the root, key rotation avoids mass expiration of assertions, at the
cost of requiring one valid signatures per key phase on at least all delegation
assertions. Key rotation schedules are a matter of authority operational policy,
but key validity intervals should be longer the closer in the delegation chain
an assertion is to the root.</t>

</section>
<section anchor="next-key-assertions" title="Next Key Assertions">

<t>Another problem this dyanmic envrionment raises is how a zone authority
communicates to its superordinate that it would like to begin using a new public
key to sign its assertions.</t>

<t>This can be done out of band, using private APIs provided by the superordinate
authority. Through the nextkey object type, RAINS provides a way for a future
public key to be shared with the superordinate authority (and all other
queriers) in-band. An authority that wishes to use a new key publishes a
reflexive nextkey assertion (i.e., in its own zone, with subject @) with the new
public key and a requested valid-since and valid-until time range. The
superordinate issues periodic queries for nextkey assertions from its
subordinate zone, or the subordinate pushes these assertions to an intermediate
service designated to receive them. When the superordinate receives a nextkey,
and it decides it wants to delegate to the new key, it creates and signs a
delegation assertion.</t>

<t>This process is not mandatory: the superordinate is free to ignore the request,
or to use a different time range, depending on its policy and/or the status of
its business relationship with the subordinate. The subordinate can discover
this, in turn, using its own RAINS queries, or through the delegation assertions
being similarly pushed to a designated intermediate service.</t>

</section>
</section>
<section anchor="unsigned-contained-assertions" title="Unsigned Contained Assertions">

<t>Although RAINS supports Shards and Zones containing unsigned assertions,
protecting the integrity of those Assertions by the signature on the Shard or
Zone, it is RECOMMENDED that authorities sign each Assertion, even those
contained within a Shard or Zone, in order to minimize the size of positive
answers to queries.</t>

</section>
<section anchor="query-service-discovery" title="Query Service Discovery">

<t>A client that will not do its own verification must be able to discover the
query server(s) it should trust for resolution. Integration with DHCP is left
to a future revision of this document.</t>

<t>In any case, clients MUST provide a configuration interface to allow a user to
specify (by address or name) and/or constrain (by certificate property) a
preferred/trusted query server. This would allow client on an untrusted network to
use an untrusted locally-available query server to discover a preferred query server
(doing key verification on its own for bootstrapping), before connecting to
that query server for normal name resolution.</t>

</section>
<section anchor="dns-transition" title="Transition using translation between RAINS and DNS information models">

<t>Full adoption of RAINS would require changes to every client device (replacing
DNS stub resolvers with RAINS clients) and name server on the Internet. In
addition, most client software would need to change, as well, to get the full
benefits of explicit context in name resolution. This is an unrealistic goal.</t>

<t>RAINS servers can, however, coexist with Domain Name System servers and
clients during an indefinite transition period. RAINS assertions can be
algorithmically translated into DNS answers, and RAINS queries can be
algorithmically translated into DNS queries, by RAINS to DNS gateways, given
the mostly compatible information models used by the two.</t>

<t>While DNSSEC and RAINS keys for equivalent ciphersuites are compatible with
each other, there is no equivalent to query option 7 for gateways, since the
RAINS signatures are generated over the RAINS byte stream for an assertion, not
the DNS byte stream. Therefore, RAINS to DNS gateways must provide verification
services for DNS clients. DNS over TLS <xref target="RFC7858"/> SHOULD be used between the
DNS client and gateway to ensure confidentiality and integrity for queries and
answers.</t>

<t>Object type mappings are as follows:</t>

<t><list style="symbols">
  <t>Objects of type name can (largely) be represented as CNAME RRs.</t>
  <t>Objects of type ip6-addr can be represented as AAAA RRs.</t>
  <t>Objects of type ip4-addr can be represented as A RRs.</t>
  <t>Objects of type redirection can be represented as NS RRs.</t>
  <t>Objects of type cert-info can be represented as TLSA RRs</t>
  <t>Objects of type service-info can be represented as SRV RRs.</t>
</list></t>

<t>There are a few object types without mappings:</t>

<t><list style="symbols">
  <t>Objects of type delegation can be represented as DS RRs, and signatures as
RRSIG RRs, but since these keys are verified by the gateway, there is no need
to represent this information to the client.</t>
  <t>Objects of type infrakey cannot be represented in DNS, but are irrelevant for
DNS translation of RAINS messages, since DNS does not support server signing
of responses.</t>
  <t>Objects of type registrar and registrant cannot be represented in DNS; clients
can use WHOIS instead. In addition, RRTYPEs could be added for them in the
future if RAINS sees significant deployment with DNS as a front-end protocol.</t>
  <t>Objects of type nameset cannot be represented in DNS; the current equivalent
are the IDNA parameters maintained by IANA (for the DNS root zone only) at
https://www.iana.org/assignments/idna-tables-6.3.0/idna-tables-6.3.0.xhtml.</t>
</list></t>

<t>When translating a DNS query from a client to a RAINS query for that client,
client options can be set on a per-server, per-client, or per-query basis
using some out of band configuration options.</t>

<t>When translating a RAINS assertion to a DNS answer, the gateway can use the
time to expiry for the verified signature as the TTL.</t>

<t>There is no method for exposing context information in a DNS query or answer.
Therefore, queries and answers at a RAINS gateway are only supported for the
global context “.”.</t>

</section>
</section>
<section anchor="experimental-design-and-evaluation" title="Experimental Design and Evaluation">

<t>The protocol described in this document is intended primarily as a prototype
for discussion, though the goal of the document is to specify RAINS completely
enough to allow independent, interoperable implementation of clients an
servers. The massive inertia behind the deployment of the present domain name
system makes full deployment as a replacement for DNS unlikely. Despite this,
there are some criteria by which the success of the RAINS experiment may be
judged:</t>

<t>First, deployment in simulated or closed networks, or in alternate Internet
architectures such as SCION, allows implementation experience with the
features of RAINS which DNS lacks (signatures as a first-order delegation
primitive, support for explicit contexts, explicit tradeoffs in queries,
runtime availability of registrar/registrant data, and nameset support),
which in turn may inform the specification and deployment of these features
on the present DNS.</t>

<t>Second, deployment of RAINS “islands” in the present Internet alongside DNS on
a per-domain basis would allow for comparison between operational and
implementation complexity and efficiency and benefits derived from RAINS’
features, as information for future development of the DNS protocol.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>The present revision of this document has no actions for IANA.</t>

<t>The authors have registered the CBOR tag 15309736 to identify RAINS messages
in the CBOR tag registry at 
https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml.</t>

<t>RAINS servers currently listen for connections from other servers on Port
1022. Future revisions of this document may specify a different port,
registered with IANA via Expert Review <xref target="RFC5226"/>.</t>

<t>The symbol table in this document in <xref target="cbor-symtab"/>, the notification code
table in <xref target="cbor-notification"/>, and the signature algorithm table in 
<xref target="cbor-signature"/> may be candidates for IANA registries in future revisions 
of this document.</t>

<t>The urn:x-rains namespace used by the RAINS capability mechanism in 
<xref target="cbor-capabilities"/> may be a candidate for replacement with an IANA-registered
namespace in a future revision of this document.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This document specifies a new, experimental protocol for Internet name
resolution, with mandatory integrity protection for assertions about names
built into the information model, and confidentiality for query information
protected on a hop-by-hop basis. See especially <xref target="signatures-in-assertions"/>,
<xref target="integrity-and-confidentiality-protection"/>, <xref target="cbor-signature"/>, 
<xref target="cbor-certinfo"/>, and <xref target="secret-key-management"/> for security-relevant 
details.</t>

<t>With respect to the resistance of the protocol itself to various attacks, we
consider a few potential attacks against RAINS servers and RAINS clients in the
subsections below:</t>

<section anchor="server-state-exhaustion" title="Server state exhaustion">

<t>[EDITOR’S NOTE: detail this attack: attacker can create domain, use
long-validity queries to exhaust state at server. defense: server can consider
shorter validity time than that requested, but not longer. attack: attacker can
push garbage assertions proactively. defense: server doesn’t accept assertions
it’s never seen a query for. how to handle an attacker that pushes assertions
and queries? attack: attacker can push garbage delegations, exhausting
delegation chain cache. defense: server doesn’t accept sigs for domains it
doesn’t know about, but what about a domain with hundreds of valid delegations?
in all cases, blacklisting both clients and domains seems like a good idea.]</t>

</section>
<section anchor="query-relay-attacks" title="Query relay attacks">

<t>[EDITOR’S NOTE: detail this attack: attacker can cause traffic overload at a
targeted intermediate or authority service by crafting queries and sending them
via multiple query services. There is no amplification here, but a
concentration, with indirection that makes tracing difficult.]</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>Thanks to Daniele Asoni, Laurent Chuat, Markus Deshon, Ted Hardie, Joe
Hildebrand, Tobias Klausmann, Steve Matsumoto, Adrian Perrig, Raphael Reischuk,
Andrew Sullivan, and Suzanne Woolf for the discussions leading to the design of
this protocol. Thanks especially to Stephen Shirley for detailed feedback, and
to Christian Fehlmann for extensive implementation experience which has informed
the further development of the protocol.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='I-D.trammell-inip-pins'>
<front>
<title>Properties of an Ideal Naming Service</title>

<author initials='B' surname='Trammell' fullname='Brian Trammell'>
    <organization />
</author>

<date month='March' day='13' year='2017' />

<abstract><t>This document specifies a set of necessary functions and desirable properties of an ideal system for resolving names to addresses and associated information for establishing communication associations in the Internet.  For each property, it briefly explains the rationale behind it, and how the property is or could be met with the present Domain Name System.  It is intended to start a discussion within the IAB's Names and Identifiers program about gaps between the present reality of DNS and the naming service the Internet needs by returning to first principles.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-trammell-inip-pins-03' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-trammell-inip-pins-03.txt' />
</reference>



<reference  anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor='RFC1918' target='https://www.rfc-editor.org/info/rfc1918'>
<front>
<title>Address Allocation for Private Internets</title>
<author initials='Y.' surname='Rekhter' fullname='Y. Rekhter'><organization /></author>
<author initials='B.' surname='Moskowitz' fullname='B. Moskowitz'><organization /></author>
<author initials='D.' surname='Karrenberg' fullname='D. Karrenberg'><organization /></author>
<author initials='G. J.' surname='de Groot' fullname='G. J. de Groot'><organization /></author>
<author initials='E.' surname='Lear' fullname='E. Lear'><organization /></author>
<date year='1996' month='February' />
<abstract><t>This document describes address allocation for private internets.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='5'/>
<seriesInfo name='RFC' value='1918'/>
<seriesInfo name='DOI' value='10.17487/RFC1918'/>
</reference>



<reference  anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC2782' target='https://www.rfc-editor.org/info/rfc2782'>
<front>
<title>A DNS RR for specifying the location of services (DNS SRV)</title>
<author initials='A.' surname='Gulbrandsen' fullname='A. Gulbrandsen'><organization /></author>
<author initials='P.' surname='Vixie' fullname='P. Vixie'><organization /></author>
<author initials='L.' surname='Esibov' fullname='L. Esibov'><organization /></author>
<date year='2000' month='February' />
<abstract><t>This document describes a DNS RR which specifies the location of the server(s) for a specific protocol and domain.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2782'/>
<seriesInfo name='DOI' value='10.17487/RFC2782'/>
</reference>



<reference  anchor='RFC3629' target='https://www.rfc-editor.org/info/rfc3629'>
<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F.' surname='Yergeau' fullname='F. Yergeau'><organization /></author>
<date year='2003' month='November' />
<abstract><t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.  This memo obsoletes and replaces RFC 2279.</t></abstract>
</front>
<seriesInfo name='STD' value='63'/>
<seriesInfo name='RFC' value='3629'/>
<seriesInfo name='DOI' value='10.17487/RFC3629'/>
</reference>



<reference  anchor='RFC4193' target='https://www.rfc-editor.org/info/rfc4193'>
<front>
<title>Unique Local IPv6 Unicast Addresses</title>
<author initials='R.' surname='Hinden' fullname='R. Hinden'><organization /></author>
<author initials='B.' surname='Haberman' fullname='B. Haberman'><organization /></author>
<date year='2005' month='October' />
<abstract><t>This document defines an IPv6 unicast address format that is globally unique and is intended for local communications, usually inside of a site. These addresses are not expected to be routable on the global Internet.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4193'/>
<seriesInfo name='DOI' value='10.17487/RFC4193'/>
</reference>



<reference  anchor='RFC4727' target='https://www.rfc-editor.org/info/rfc4727'>
<front>
<title>Experimental Values In IPv4, IPv6, ICMPv4, ICMPv6, UDP, and TCP Headers</title>
<author initials='B.' surname='Fenner' fullname='B. Fenner'><organization /></author>
<date year='2006' month='November' />
<abstract><t>When experimenting with or extending protocols, it is often necessary to use some sort of protocol number or constant in order to actually test or experiment with the new function, even when testing in a closed environment.  This document reserves some ranges of numbers for experimentation purposes in specific protocols where the need to support experimentation has been identified, and it describes the numbers that have already been reserved by other documents.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4727'/>
<seriesInfo name='DOI' value='10.17487/RFC4727'/>
</reference>



<reference  anchor='RFC5246' target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author initials='D.' surname='Cooper' fullname='D. Cooper'><organization /></author>
<author initials='S.' surname='Santesson' fullname='S. Santesson'><organization /></author>
<author initials='S.' surname='Farrell' fullname='S. Farrell'><organization /></author>
<author initials='S.' surname='Boeyen' fullname='S. Boeyen'><organization /></author>
<author initials='R.' surname='Housley' fullname='R. Housley'><organization /></author>
<author initials='W.' surname='Polk' fullname='W. Polk'><organization /></author>
<date year='2008' month='May' />
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference  anchor='RFC7049' target='https://www.rfc-editor.org/info/rfc7049'>
<front>
<title>Concise Binary Object Representation (CBOR)</title>
<author initials='C.' surname='Bormann' fullname='C. Bormann'><organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<date year='2013' month='October' />
<abstract><t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation.  These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t></abstract>
</front>
<seriesInfo name='RFC' value='7049'/>
<seriesInfo name='DOI' value='10.17487/RFC7049'/>
</reference>


<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard FIPS 186-3</title>
    <author initials="." surname="NIST">
      <organization></organization>
    </author>
    <date year="2009" month="June"/>
  </front>
</reference>




<reference  anchor='RFC8032' target='https://www.rfc-editor.org/info/rfc8032'>
<front>
<title>Edwards-Curve Digital Signature Algorithm (EdDSA)</title>
<author initials='S.' surname='Josefsson' fullname='S. Josefsson'><organization /></author>
<author initials='I.' surname='Liusvaara' fullname='I. Liusvaara'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This document describes elliptic curve signature scheme Edwards-curve Digital Signature Algorithm (EdDSA).  The algorithm is instantiated with recommended parameters for the edwards25519 and edwards448 curves.  An example implementation and test vectors are provided.</t></abstract>
</front>
<seriesInfo name='RFC' value='8032'/>
<seriesInfo name='DOI' value='10.17487/RFC8032'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor='RFC1035' target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor='RFC4291' target='https://www.rfc-editor.org/info/rfc4291'>
<front>
<title>IP Version 6 Addressing Architecture</title>
<author initials='R.' surname='Hinden' fullname='R. Hinden'><organization /></author>
<author initials='S.' surname='Deering' fullname='S. Deering'><organization /></author>
<date year='2006' month='February' />
<abstract><t>This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol.  The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.</t><t>This document obsoletes RFC 3513, &quot;IP Version 6 Addressing Architecture&quot;.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4291'/>
<seriesInfo name='DOI' value='10.17487/RFC4291'/>
</reference>



<reference  anchor='RFC4632' target='https://www.rfc-editor.org/info/rfc4632'>
<front>
<title>Classless Inter-domain Routing (CIDR): The Internet Address Assignment and Aggregation Plan</title>
<author initials='V.' surname='Fuller' fullname='V. Fuller'><organization /></author>
<author initials='T.' surname='Li' fullname='T. Li'><organization /></author>
<date year='2006' month='August' />
<abstract><t>This memo discusses the strategy for address assignment of the existing 32-bit IPv4 address space with a view toward conserving the address space and limiting the growth rate of global routing state. This document obsoletes the original Classless Inter-domain Routing (CIDR) spec in RFC 1519, with changes made both to clarify the concepts it introduced and, after more than twelve years, to update the Internet community on the results of deploying the technology described.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='122'/>
<seriesInfo name='RFC' value='4632'/>
<seriesInfo name='DOI' value='10.17487/RFC4632'/>
</reference>



<reference  anchor='RFC5226' target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor='RFC5905' target='https://www.rfc-editor.org/info/rfc5905'>
<front>
<title>Network Time Protocol Version 4: Protocol and Algorithms Specification</title>
<author initials='D.' surname='Mills' fullname='D. Mills'><organization /></author>
<author initials='J.' surname='Martin' fullname='J. Martin' role='editor'><organization /></author>
<author initials='J.' surname='Burbank' fullname='J. Burbank'><organization /></author>
<author initials='W.' surname='Kasch' fullname='W. Kasch'><organization /></author>
<date year='2010' month='June' />
<abstract><t>The Network Time Protocol (NTP) is widely used to synchronize computer clocks in the Internet.  This document describes NTP version 4 (NTPv4), which is backwards compatible with NTP version 3 (NTPv3), described in RFC 1305, as well as previous versions of the protocol. NTPv4 includes a modified protocol header to accommodate the Internet Protocol version 6 address family.  NTPv4 includes fundamental improvements in the mitigation and discipline algorithms that extend the potential accuracy to the tens of microseconds with modern workstations and fast LANs.  It includes a dynamic server discovery scheme, so that in many cases, specific server configuration is not required.  It corrects certain errors in the NTPv3 design and implementation and includes an optional extension mechanism.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5905'/>
<seriesInfo name='DOI' value='10.17487/RFC5905'/>
</reference>



<reference  anchor='RFC6605' target='https://www.rfc-editor.org/info/rfc6605'>
<front>
<title>Elliptic Curve Digital Signature Algorithm (DSA) for DNSSEC</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<author initials='W.C.A.' surname='Wijngaards' fullname='W.C.A. Wijngaards'><organization /></author>
<date year='2012' month='April' />
<abstract><t>This document describes how to specify Elliptic Curve Digital Signature Algorithm (DSA) keys and signatures in DNS Security (DNSSEC).  It lists curves of different sizes and uses the SHA-2 family of hashes for signatures.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6605'/>
<seriesInfo name='DOI' value='10.17487/RFC6605'/>
</reference>



<reference  anchor='RFC6698' target='https://www.rfc-editor.org/info/rfc6698'>
<front>
<title>The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<author initials='J.' surname='Schlyter' fullname='J. Schlyter'><organization /></author>
<date year='2012' month='August' />
<abstract><t>Encrypted communication on the Internet often uses Transport Layer Security (TLS), which depends on third parties to certify the keys used.  This document improves on that situation by enabling the administrators of domain names to specify the keys used in that domain's TLS servers.  This requires matching improvements in TLS client software, but no change in TLS server software.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6698'/>
<seriesInfo name='DOI' value='10.17487/RFC6698'/>
</reference>



<reference  anchor='RFC7231' target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor='RFC7624' target='https://www.rfc-editor.org/info/rfc7624'>
<front>
<title>Confidentiality in the Face of Pervasive Surveillance: A Threat Model and Problem Statement</title>
<author initials='R.' surname='Barnes' fullname='R. Barnes'><organization /></author>
<author initials='B.' surname='Schneier' fullname='B. Schneier'><organization /></author>
<author initials='C.' surname='Jennings' fullname='C. Jennings'><organization /></author>
<author initials='T.' surname='Hardie' fullname='T. Hardie'><organization /></author>
<author initials='B.' surname='Trammell' fullname='B. Trammell'><organization /></author>
<author initials='C.' surname='Huitema' fullname='C. Huitema'><organization /></author>
<author initials='D.' surname='Borkmann' fullname='D. Borkmann'><organization /></author>
<date year='2015' month='August' />
<abstract><t>Since the initial revelations of pervasive surveillance in 2013, several classes of attacks on Internet communications have been discovered.  In this document, we develop a threat model that describes these attacks on Internet confidentiality.  We assume an attacker that is interested in undetected, indiscriminate eavesdropping.  The threat model is based on published, verified attacks.</t></abstract>
</front>
<seriesInfo name='RFC' value='7624'/>
<seriesInfo name='DOI' value='10.17487/RFC7624'/>
</reference>



<reference  anchor='RFC7696' target='https://www.rfc-editor.org/info/rfc7696'>
<front>
<title>Guidelines for Cryptographic Algorithm Agility and Selecting Mandatory-to-Implement Algorithms</title>
<author initials='R.' surname='Housley' fullname='R. Housley'><organization /></author>
<date year='2015' month='November' />
<abstract><t>Many IETF protocols use cryptographic algorithms to provide confidentiality, integrity, authentication, or digital signature.  Communicating peers must support a common set of cryptographic algorithms for these mechanisms to work properly.  This memo provides guidelines to ensure that protocols have the ability to migrate from one mandatory-to-implement algorithm suite to another over time.</t></abstract>
</front>
<seriesInfo name='BCP' value='201'/>
<seriesInfo name='RFC' value='7696'/>
<seriesInfo name='DOI' value='10.17487/RFC7696'/>
</reference>



<reference  anchor='RFC7858' target='https://www.rfc-editor.org/info/rfc7858'>
<front>
<title>Specification for DNS over Transport Layer Security (TLS)</title>
<author initials='Z.' surname='Hu' fullname='Z. Hu'><organization /></author>
<author initials='L.' surname='Zhu' fullname='L. Zhu'><organization /></author>
<author initials='J.' surname='Heidemann' fullname='J. Heidemann'><organization /></author>
<author initials='A.' surname='Mankin' fullname='A. Mankin'><organization /></author>
<author initials='D.' surname='Wessels' fullname='D. Wessels'><organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<date year='2016' month='May' />
<abstract><t>This document describes the use of Transport Layer Security (TLS) to provide privacy for DNS.  Encryption provided by TLS eliminates opportunities for eavesdropping and on-path tampering with DNS queries in the network, such as discussed in RFC 7626.  In addition, this document specifies two usage profiles for DNS over TLS and provides advice on performance considerations to minimize overhead from using TCP and TLS with DNS.</t><t>This document focuses on securing stub-to-recursive traffic, as per the charter of the DPRIVE Working Group.  It does not prevent future applications of the protocol to recursive-to-authoritative traffic.</t></abstract>
</front>
<seriesInfo name='RFC' value='7858'/>
<seriesInfo name='DOI' value='10.17487/RFC7858'/>
</reference>



<reference  anchor='RFC7871' target='https://www.rfc-editor.org/info/rfc7871'>
<front>
<title>Client Subnet in DNS Queries</title>
<author initials='C.' surname='Contavalli' fullname='C. Contavalli'><organization /></author>
<author initials='W.' surname='van der Gaast' fullname='W. van der Gaast'><organization /></author>
<author initials='D.' surname='Lawrence' fullname='D. Lawrence'><organization /></author>
<author initials='W.' surname='Kumari' fullname='W. Kumari'><organization /></author>
<date year='2016' month='May' />
<abstract><t>This document describes an Extension Mechanisms for DNS (EDNS0) option that is in active use to carry information about the network that originated a DNS query and the network for which the subsequent response can be cached.  Since it has some known operational and privacy shortcomings, a revision will be worked through the IETF for improvement.</t></abstract>
</front>
<seriesInfo name='RFC' value='7871'/>
<seriesInfo name='DOI' value='10.17487/RFC7871'/>
</reference>



<reference anchor='I-D.thomson-postel-was-wrong'>
<front>
<title>The Harmful Consequences of Postel's Maxim</title>

<author initials='M' surname='Thomson' fullname='Martin Thomson'>
    <organization />
</author>

<date month='June' day='12' year='2017' />

<abstract><t>Jon Postel's famous statement in RFC 1122 of "Be liberal in what you accept, and conservative in what you send" - is a principle that has long guided the design of Internet protocols and implementations of those protocols.  The posture this statement advocates might promote interoperability in the short term, but that short-term advantage is outweighed by negative consequences that affect the long-term maintenance of a protocol and its ecosystem.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-thomson-postel-was-wrong-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-thomson-postel-was-wrong-01.txt' />
</reference>


<reference anchor="XEP0115" >
  <front>
    <title>XEP-0115 Entity Capababilities</title>
    <author initials="J." surname="Hildebrand">
      <organization></organization>
    </author>
    <author initials="P." surname="Saint-Andre">
      <organization></organization>
    </author>
    <author initials="R." surname="Troncon">
      <organization></organization>
    </author>
    <author initials="J." surname="Konieczny">
      <organization></organization>
    </author>
    <date year="2008" month="February" day="26"/>
  </front>
</reference>
<reference anchor="SCION" >
  <front>
    <title>SCION Five Years Later - Revisiting Scalability, Control, and Isolation Next-Generation Networks (arXiv:1508.01651v1)</title>
    <author initials="D." surname="Barrera">
      <organization></organization>
    </author>
    <author initials="R." surname="Reischuk">
      <organization></organization>
    </author>
    <author initials="P." surname="Szalachowski">
      <organization></organization>
    </author>
    <author initials="A." surname="Perrig">
      <organization></organization>
    </author>
    <date year="2015" month="August"/>
  </front>
</reference>
<reference anchor="PARSER-BUGS" >
  <front>
    <title>The Bugs We Have To Kill (USENIX login)</title>
    <author initials="S." surname="Bratus">
      <organization></organization>
    </author>
    <author initials="M." surname="Patterson">
      <organization></organization>
    </author>
    <author initials="A." surname="Shubina">
      <organization></organization>
    </author>
    <date year="2015" month="August"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIAFBFwlkAA+x9aXPjRpbg9/wVCHXEWIolad2lUsXujlwqjzVdV5fkmT6m
YwMkQQldJEADoFS0y/9935n5EgAple2e6d2Yipm2SAJ5vHz57mM4HLomb+bZ
efLh4urtdbJ7UZTNXVYlV0WTVUXWJG/TRV7cJtdZdZ9Psr3kfVU25aScJ9fL
bJLP8kna5GXh0vG4yu5lGDctJ0W6gFGnVTprhk2VLhbZfD6s0ryoh0sZYjhP
m6xu3BT+c544GCm7Lav1eZJ9WjqXL6vzpKlWdXO4v/98/9B9zNYPZTU992sb
XuLoztVNWkz/TzovCxhmndVumZ8nf4EpBkldVk2VzWr4a73AP/7qXLpq7srq
3CVDl8A/WNF58s0ouZFF0pe8+m+qPC3iH8rqNi3yH2nT58mrm++SP6+qfHJH
P9YwV9acJ98X+X1W1XmTZg18l9Z1lpzSE5O8gf2ZVyblFCY6239+KB9XRYMg
uH7Imx+zag47ox+yRZrPz5M8a2b/rOAcwRiuKKsFrOY+O6fnroaXIw/uvMiX
wyVukH778O3L/WfPj/yHg+cHZ/7D4cHB8/Dh2dmh/3B0ehh+OT4wAxw/O3zm
P5wcHp+aD2f7/sOz/WMZ4Nur99fDg7PToYyRJP4w5N/Q/yUn8/bq+ka+E0y9
zG8BsoCA+W2RNqsqS64RAdJqSuMnNL68wqj1r6siSxCLdEVn+0ewP5cXsxh6
CJT9o5OwwcPnB+HD6dGh2eCh2e3z/fDO6Wn04XkA8bPDozDas9PDY/PheRjt
2dmJeefs2YE52btyUZfFcFnWTTYfPqT18KEqi1t+4o+v3u8fHJycx+CCb4f4
dfKqgG/Wyct0mY7TcT7PmxzuyhOP4V9HyXf5fJqNK8XI3sfej5JruOPN8KKY
Vtnm5z7gfSuLCVAO/0zSM+fvyyLPJj8W6+g84SjPhvuHw0O+VNcvr969be2a
vku+hZNN/pSlVZ28hjcrmORDdp/DzSSaNknnDIj1IHlZwsUr54ME9pdc1eWc
rnjyNvvUDP8lK7JKPzdAhD7WyW5a/TG/Pz842T8b7R+cnhzcH+zFwEw2b/9y
lHyTVhUMmmzZPwDpQ5bXk7vVxy1PIch/hI1M7sqH+mO+5cmLUfI+q6r8tgXM
g5Ph/hl99/7iw/WrD8Nvvv+X6xY8b+6y5JvVbZ38e5Z8lwJUb8rk9/l8nux+
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
NK+5jNBd+ZCksRdr7YLRPZQAjh3S6jVlLMd8fKYJt7AlLV1IqE7Uh64phpSg
BELhBOEApISTGhQo5GBFpz0mlwmPtqxA64B5L95f1YGVaPtRuzSvcJDNgqUl
jYlv+f4CuabxkFw/pGshaFJny5BPJnrINa1RJYZLQJNdbuY0l4ZobC6t0FhX
DHFn1OIiPC5hNlqVlJUIhCAhtMhHmCgd4gt0RwFVNJ++8JYotiTQYtUh/s8m
Hx4msDtkmugTYaOWSH0NorhDMrtZYziIzsv6G4yu1mKyULbXLcYmTB6DRUZB
DxyOTmAOP2D0YaZR5B0DDl29RTZFlubU7MxePGlK4I3VMMLCkPJ4CyakTVbM
RBgrMWQTwhe8AKlYxb0BUi6rnB2XkdBsROnJVYf82ch1gaRdLf5aVAx9kCim
Y/fW9XnPOkmWzGheGForwsshDlA98PgUFP1wegPJhGGqyjVqiKppSQiaEegj
irQzzNNMxngnqblZNmcWcJcv7Y3wRyWdo8zZ4T1HwwjVj0T6ROiKOcyDlhGV
76YgjuBBuM69nh+N3c4XOSsxhCkSEWlQwKKImvlY9vxeG8y9ZOMJ/BUR2DlG
kt96rU6D87lRKZ0v9Sq10eW+Z51hbE79g0bh5YgAYq8Y62riM5TMtdtbXXMM
WOX+TDdFmwq+fPfmzau3l68uRYW3BhgkwMTGL4IekJEk5luG864lxiv1kyQy
iVG4KAQRA/J4dT+SEIIVxMm76auFlHqIDGLu130tF/NScGGNFX7VHOxDDskB
7y3DsUPAK4WoD+IFlJFIYujxkAgjppAKkfG9k0TiZtIQ1nn53cv3VGommzWO
8EcqzKjTmk/KVAzlbAEupVEbzwSZKYIDM3aDeh0uxE+m7Iz3TlhgJdzDleLl
xMOzp7fThzTRU9bRrV7DPXL3Z3DxgW993Y0o8bXkpK4KLUJOgqVGnzzlcz5g
cURR7G/zkkIxQvhI7FKxJ5QmfkHRQ253WuKVIFEqCo0JHA1PLqoFujcALKDQ
VnWykUOE9ahoCcR8qFZ/10uGmHnjWzJozCp+MY8LtYplFm76JccNxCEnGFze
au/g3LcUOzEVJ4g376oBgdOUuHwn3Re0VvgkdzblJLu+lp3DietmNQ757yZQ
SfGOrW+0T00qYqqh0UBUdzdYcchmqF49tSfxCjG6h2J77phhiEZMMb+3mSnd
P86KbJZzzwDN3fBxXYCibaiLwVFqrqG1FVtnTCjcp2MKBc4REkxgVIrckcta
ot+Um6ZeU3iQDQZx3kfIFj+SEaZcB1pij/nQWVrRGq5GsGDhNFTyl8YNih4a
MX1JiEFUz3YLV9nnC0bxXA/uNA8iP6CEATJqLQq0U2vvfO27k8x7AqHqKOoZ
7jAVTMAAIGlSElYbrJfB0j/Jl+iEWZHZNaWb5uciozBrhijoDjjUnCWXlreg
lf6Jk4T9+J6h3f43cWMwpfGyXtuVgyT3KDgUq//hs5fxkySXcED8oB/AzF6U
bFtipDIlQ+ky3LgRfeAC0K+vJeTp7OTs5581CdCbmYSW4G7DAHQIMj9RAQ5Q
bYcWcf0flRfUOCtxPsp1MfzMBDlK8J6otXG3znfSHEszPuiSIq7uUoLFHBhI
t2nRy7cXb14lHz5QXlB7hHx5OkR+pUpd690L+Lf51eOtr256z8ZF9b8KYN7w
bih83f8mHCbNm/S8K7iw7fXrD//GM7sb398CpAlQD4wqWvskRT2q3rOxloLe
yS5plwOvafhWdy6BH66v/oV/RnuFv3B1Fnqg+aABIRWCjvGtRn6A4SmlMX53
Wg34GMFc8pU7R61uEFuTNmwG6DlcDV4qriwHaWGe3YtDAqbHi2MZtGerISeF
t4gPhuJfvkGzD/TgBjtcFJtjl/ox7BbD3NJKwp34U6jv27v8F0obqKBrQWrY
v3/37uqaCpZl6bTlSvnw4eZP71+h+iA2I/gpm2ptqIXWBEpUGM1DtXeR7olM
kdTg3cnMIomjIeJVwI+HGZXgkAL8G4gAxjts3xwd8KoijTKQeup9xErB1eXb
CywYDKM1nLiXq4IBCHZ1Ab/uauErXCFF5nHaCdbBS6je313TLOvzr79+eHgY
5WmRjsrq9mug8bBb6qr1dT4t0iHVv6uHp6Oj0X73m9Gnu2Yx1zJBHm3ITqUM
Vzp7mJBtby63FcN8lOtAA1603JpcSYoTKShksBqqAw//1sDBkjoKcEU2dDfn
tRTBr8tFZP1qKQsyT/8uWkILrz5IJAN7nT0uIjKpB5+ssKEOmacExp3ANuOb
m9eemDFBgNO9KxlNTQspFfuicGYLbuLWuLiRM+zYRq36oqKN36FuwbcJCu3B
ZOnudl6OuTEJrWBntENBHK9sV4BLsgbQJK+w2KY4UKLQoajEetwdwrbWCq3i
6ILR63iJHNW54iAQcZR684UJaI8GbUpfnlCkeenuMV+7rODXVVFEIRYtN1x5
F6V6Mk2TANgqmzDz2mhaxLlnaIDn0A3EmxQjvHIJmo8jUmxgx5TlbSQSEo5P
0Rm1Rp/69wgg4gChL1RkWhVcw3WEB7EkORxtQa7xLJLuwgQ9/RUuax18k4nk
eOqqGFCh54N49NzfVtPbbAp89Fus7DCw68K+r5j5xAJlxfZ4r976jgmh1Zcq
TS6tJnc5mm6Ir2oYx/XLq3dvBz5/MIY+ryzTSo2EotpazCiDtD2EDQDrI4ZG
RZ1qU65PMWTji/FlIPblHEhtu5S11S+MFNGvgHBMs3I2I8+NqhpOc7TaIROe
8X1tmB7mUw68hokUTybfG4gfWqx6dBhMA/jsNGuDTXfFtItmQJcUPJIybyOK
qAUVFvwYJH0hUzs5kMRiyg1R7as+CYYqlGDwFYvr2PgeqbHgNJHjyBTiOz9W
eW3sANYNROlg8aHzvf2kAns2gz3nnMxJKQuiKEd9BGkHX7nQdi5tdW/C3kvM
+KegBc/Lpb2clyYYkegdsde+cDUFyUZTFlU0BbqeausTmBhHk0opbFGU0ARG
Copkw1VQc6ImvU0OTo72nz87OiW7NKkvnqb56gpyRP4dQTDyHrtH2T5FDcJr
5i/P5lumA5ZRgEL3h2Tb3i61j2xM3gM+O+wLM0q+jY1/dRdk1IlCSLe1tFO/
IWegRDSAzgYjTYgpNckHGBg0AukkdHhKoWBkO18vxthfisl6hw1po6ohPAfP
YI+R5q5VzQo73jk/gDxvn9DOJLGR2dspwuROJ9OHqJoGhU9MsN731If30P7k
OLn/Wdt+CupUjwUVt2w65zF1WaJ9tJu2bYJLTU/MsMo4oFQXmoalihU4cCcp
okKrH4Yjc2EVkmPxqCWYYsg4FKt7A+0JhpLQ5O4b9PcuYpiaND6qmipmNPHv
eSdRf75kK7UuHaOcSRtzj+VRDhIvixo7RAgLMy+oY0MjKE2KFFFWLlaU0a7J
+vXTT4HPgRY9DEsErIST9HsZwhqGrTUMw/4Qh7vYOQjIIEFliuswL8V/DUED
HYZwHO775OPohl7nxDZsWHMXhW8pw7E0eY4mI7Ddykca7cGD9ylHhqVNgywe
zo1TkhE7xCSwLBvenT6kCYY9Pacic6+qhjYAmRrgnktEI6u7VJMp+3SXrmoW
eDuN93ifjNC8hnP5r2QWsjNTZEB02mWOCkj52AeTGSQzybyhbxOmXmSgaZ/7
qpEcr0ygcPUdyvNVnPGQSN2PNKrUrEWOOLZi1LtiR9VqbtNqHIWH1SETD+XQ
9orQYoCVNzSKLngBsc6IZPhQc9s0qIcjiqdoSkr3nHPcnq6E47rYdW1G0/4D
ALH/3Q/waPkm7mbgDxKTo1oxJBzy9+i24K4wwebjRJe200ewNQ7TCYbzA3kT
iW6kqgJwHuSqmFbYGEzDAO0q/7cjQXpOXjE0PaF4O5cW2RRvF1STqV8GAHbB
fR4o+7fEcl5ZSh0d1YOIzue1XpNfhMgpqcBVirIZ2W3nZUrlIFJgl9Vt1nEV
Iwltp4dQchyM0dikXE3mF//uwiGr9yF0UUZcLbZoUaVTbg0mrBt/EBMYUgoM
6Nb+FQR5rJCkZk+pHkNVGqXoM0ohGNDbcCvMiwke6Tyb3pIAhawoLbgfwCVw
Tziz5AJE3HyQvE5XJLy8vAPFeJC8SauPQLdAVbvDqW8ALt+l1TSHtf1rmbnv
8vk0G1cUrnNTjnMQHn8/B+ACWYWnrxusW/UmberVosRa9xdT0OhAusqqKr8d
JB/S5V2azUEEAlX5bvVx4C4QnR6Sa1Am83v0+iA4r1c/wnBZ8u9lCdRUrRRB
vUZXbWqTodjfjzELjYRUSLtJ2bVhQvAGrHKJRpXru7yaZ1qjGjEIpfMsm2Kb
Wy78AE+/vKsQg2EX32Z3c9ynKF2Sl7ZNBSTt6M6L9iBesP+sIvGzR7A3Qv1w
OExwIZSToidfW8XAiA/BohHyU7zeid1WQGe7veVIHxN87+HGDIbRD0V9N0Zq
hw5xtVFZ+18sDbUVveDd9mHMrrVUrxwv1J9LoczqbmIjSKgfIZV/Qpyuz9ug
iqpEBNEZi5+G9AnLxfhCX1YUQkhMyqXYeTIMfAcG7LmPCJ0hD6aUDIoQ3lwH
V6bRC2G5sQPs5ua177YpYEONNrkwIYmCIGPQcRckODNF5QD+xZJL4bFBFuTF
UN0mhL2FeHdyI2vccZziXkudVvY9w8AVskJs1lusFmNSgGZmfyoCslmalFdW
miSoMWLV2ERREc664xxH0GFs9UdUhGg0pFhMpLXCkcAS8QKbHCDGkIUTTn0+
9e7xsDjylAREGN5gvvw5lRHSepkmnJuLUjP9yE1IuRbuoBqmUrvDVDopo1Be
0hsW5T358hRXNRIeT0PhMUK/S2ty69BEHOlD3AGoNGnoPp3aWn4apt3Z1M60
fCikem0IwPU9pPEZHAejx2ATFL+mBaioLzNlWXlNyipcnaly9Gj4Jh3+uXRe
3rLOiG9jONt3/vrJPm1kfRfOu6qHmvika81ToDgn7ltCYn+91z4XOYxcq17W
lHSBbP6utQ4X1jGQFSC0UfgGLFZvc52k5lQUntQzEEWUKceJEAGnx2argplx
p8xNn15NsbJaDx03wD2x3jZ33P/JW4fIKsoxkkw9zJo6R0N6l59uxL4CPI4B
Yzw/lS6XWVqJaZE842lVoTwlbQfsiql4muoXYR/4/AjDtswSxAUijZLGHpIh
IlhriaqHkkP+0EJyj/EfwoTeDg/qRqDgw8jNrn1LhHjzeNxOw6iAPebLXBhp
6smO6eZGPo42hrMFJZQdiEolEn3mokeKdSIXL4E0c222wmRqTqjeFnfHiBIB
JFL7IkquY7ij/x1u17XE65qGLvTTS3FraLDhIG556l15fJ7s2fQvS/nHuElO
qBtGIrwMQFcHBXnADYklwDrd1N99IEGK/Mn4onmDtJe3K87Pau70F5zOb5hr
qHF04WNQ4qfUOsMGAOorHwrcwdIo2vYxaPG0REgem5Ue6k5K8REyjdQetTPB
jfi2XFVkdaNW7GInJeEJDa/VPUdTqbV+gxiUmxbYZAkG2fuhYAtek47h6qA4
8zPS2J/Ok9/5r4ADN/Psf+5cSmPzHsJT74AY9BkWPM2Sz8l18DN8TpBcf/3d
m4uX8Pe3zBXif58tO/vsPg/x3zn/R/59/r+VXU1PwkAQvfdXNHihhpoABUk8
GI+ejImJ5wILNlJqqBcO/HfnzczuzqJEvZUGHpvtdnc+37twfek2oeSTirGd
cmjyB3q65Ww84WuhuHbrdV+XclqdTnTb7OqMMlOUqlr44RLKu5vM5v9AmQvK
Cl/TX2IsfBlRVr+g3BqU6aLyKHz5R5RMMnSNamVz1MPH8s6XjfZyxLohMRzM
xpYFKhlppf+oRQMm9pT+xIWk7aHGWsxCaMuULHJZKAj/6uUOp8JLl4rCx+Ea
TWWusYoeAexlycW61G5sDMEsl9qr3WFF2PQN7pUEO4YwNduxO2pfRKaRESOs
aOVF0T1ufj6K/ZN9qOuPWpBX+ROezLM+GfH8H7n5QXg6TWrcUOiESlgumiXT
pl6h6SjIqy+ddXTKEEOGtSwdo1thYfIJcqZbwhyL+7k8Rp4NtWBwBsL6M1vp
OQwWRbfx/89UHt7pFbbG2CI42IMPBsCcNk1HM0gq/ZLq4maP8GHvTH6MhQ5b
h1MUlbwSlQmtRd5DwdQPD64sAvme8LU9yMg9OTrkIUUjS5kGhAJB8rSETus6
mU91Lnp0QtP2zpMfNQs2EvDpWn5PaODBcqhVegD2fUpE9y310oNeYgRSR5Uu
Hk91dFxCHdt68ZdM3Elvk2PuATh7sDIvSyPe569OAnVDZROVVVYIFcKnFfNr
QOlOnvtN4i7xxkFr4g5z3jbbN3Yu23rtlDIUjiEngHxHEzh+O6YstTlQTPWh
2xVCrOMtu8RLib6FJ47Mr3EAXxOUWGc2cFjQ3S9XgH8U7pEBAA==

-->

</rfc>

